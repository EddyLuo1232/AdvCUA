{"ast":null,"code":"var _jsxFileName = \"/Users/eddy/AdvCUA_page/attack-demo/src/components/TrafficHijackDemo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoSection = styled.section`\n  padding: 4rem 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n  min-height: 100vh;\n`;\n_c = DemoSection;\nconst SectionTitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: 1rem;\n  background: linear-gradient(135deg, #ef4444 0%, #f97316 50%, #eab308 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n`;\n_c2 = SectionTitle;\nconst SectionSubtitle = styled.p`\n  text-align: center;\n  color: ${props => props.theme.colors.textSecondary};\n  font-size: 1.125rem;\n  margin-bottom: 3rem;\n`;\n_c3 = SectionSubtitle;\nconst DemoGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  \n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c4 = DemoGrid;\nconst DemoContainer = styled.div`\n  background-color: ${props => props.theme.colors.surface};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  padding: 2rem;\n  border: 1px solid ${props => props.theme.colors.border};\n  position: relative;\n  overflow: hidden;\n`;\n_c5 = DemoContainer;\nconst DemoHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n`;\n_c6 = DemoHeader;\nconst DemoTitle = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: ${props => props.theme.colors.text};\n`;\n_c7 = DemoTitle;\nconst NetworkTopology = styled.div`\n  padding: 2rem;\n  text-align: center;\n  background: linear-gradient(135deg, rgba(96, 165, 250, 0.05) 0%, rgba(167, 139, 250, 0.05) 100%);\n  border-radius: ${props => props.theme.borderRadius.md};\n  margin-bottom: 2rem;\n`;\n_c8 = NetworkTopology;\nconst NodeContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 2rem 0;\n  position: relative;\n`;\n_c9 = NodeContainer;\nconst NetworkNode = styled(motion.div)`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: 600;\n  font-size: 0.875rem;\n  position: relative;\n  border: 3px solid;\n  \n  ${props => {\n  switch (props.nodeType) {\n    case 'source':\n      return `\n          background: linear-gradient(135deg, #60a5fa 0%, #3b82f6 100%);\n          border-color: #60a5fa;\n        `;\n    case 'attacker':\n      return `\n          background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n          border-color: #ef4444;\n        `;\n    case 'target':\n      return `\n          background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n          border-color: #10b981;\n        `;\n  }\n}}\n`;\n_c0 = NetworkNode;\nconst NodeLabel = styled.div`\n  font-size: 0.75rem;\n  margin-top: 0.5rem;\n`;\n_c1 = NodeLabel;\nconst NodeIP = styled.div`\n  font-size: 0.7rem;\n  opacity: 0.9;\n`;\n_c10 = NodeIP;\nconst ConnectionLine = styled(motion.div)`\n  position: absolute;\n  height: 3px;\n  background: ${props => props.isActive ? 'linear-gradient(90deg, #ef4444 0%, #f97316 50%, #eab308 100%)' : '#374151'};\n  top: 50%;\n  transform: translateY(-50%);\n  border-radius: 2px;\n  \n  &.line-1 {\n    left: 140px;\n    width: 120px;\n  }\n  \n  &.line-2 {\n    right: 140px;\n    width: 120px;\n  }\n`;\n_c11 = ConnectionLine;\nconst Terminal = styled.div`\n  background-color: #1e1e1e;\n  border-radius: ${props => props.theme.borderRadius.md};\n  padding: 1.5rem;\n  font-family: 'Consolas', 'Monaco', 'Courier New', monospace;\n  font-size: 0.8rem;\n  height: 400px;\n  overflow-y: auto;\n  position: relative;\n`;\n_c12 = Terminal;\nconst TerminalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #374151;\n`;\n_c13 = TerminalHeader;\nconst TerminalDot = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n`;\n_c14 = TerminalDot;\nconst TerminalTitle = styled.span`\n  color: #9ca3af;\n  font-size: 0.75rem;\n`;\n_c15 = TerminalTitle;\nconst CommandLine = styled(motion.div)`\n  color: #10b981;\n  margin: 0.5rem 0;\n  \n  &::before {\n    content: \"$ \";\n    color: #60a5fa;\n  }\n`;\n_c16 = CommandLine;\nconst OutputLine = styled(motion.div)`\n  color: ${props => {\n  switch (props.type) {\n    case 'success':\n      return '#10b981';\n    case 'error':\n      return '#ef4444';\n    case 'warning':\n      return '#f59e0b';\n    case 'info':\n      return '#60a5fa';\n    default:\n      return '#d1d5db';\n  }\n}};\n  margin: 0.25rem 0;\n  font-size: 0.75rem;\n`;\n_c17 = OutputLine;\nconst ControlPanel = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n_c18 = ControlPanel;\nconst ControlButton = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: ${props => props.theme.borderRadius.md};\n  border: none;\n  font-weight: 600;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  \n  ${props => {\n  switch (props.variant) {\n    case 'primary':\n      return `\n          background: linear-gradient(135deg, #60a5fa 0%, #3b82f6 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(96, 165, 250, 0.3); }\n        `;\n    case 'danger':\n      return `\n          background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3); }\n        `;\n    case 'success':\n      return `\n          background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3); }\n        `;\n    default:\n      return `\n          background-color: ${props.theme.colors.surface};\n          color: ${props.theme.colors.text};\n          border: 1px solid ${props.theme.colors.border};\n          &:hover { background-color: ${props.theme.colors.surfaceLight}; }\n        `;\n  }\n}}\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n_c19 = ControlButton;\nconst StatusIndicator = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  border-radius: ${props => props.theme.borderRadius.md};\n  font-size: 0.875rem;\n  font-weight: 600;\n  \n  ${props => {\n  switch (props.status) {\n    case 'idle':\n      return `\n          background-color: rgba(107, 114, 128, 0.1);\n          color: #6b7280;\n        `;\n    case 'scanning':\n      return `\n          background-color: rgba(59, 130, 246, 0.1);\n          color: #3b82f6;\n        `;\n    case 'spoofing':\n      return `\n          background-color: rgba(239, 68, 68, 0.1);\n          color: #ef4444;\n        `;\n    case 'capturing':\n      return `\n          background-color: rgba(16, 185, 129, 0.1);\n          color: #10b981;\n        `;\n  }\n}}\n`;\n_c20 = StatusIndicator;\nconst StatusDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: currentColor;\n  animation: ${props => props.isActive ? 'pulse 2s infinite' : 'none'};\n  \n  @keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.5; }\n    100% { opacity: 1; }\n  }\n`;\n\n// Attack simulation data\n_c21 = StatusDot;\nconst networkScanSteps = [{\n  command: \"nmap -sn 192.168.2.0/24\",\n  description: \"Scanning network for active hosts\"\n}, {\n  command: \"ip route show\",\n  description: \"Checking network topology\"\n}, {\n  command: \"arp -a | grep \\\"192.168.2\\\"\",\n  description: \"Discovering ARP table entries\"\n}];\nconst arpSpoofingSteps = [{\n  command: \"echo 1 > /proc/sys/net/ipv4/ip_forward\",\n  description: \"Enabling IP forwarding\"\n}, {\n  command: \"ettercap -T -i eth0 -M arp:remote /192.168.2.100// /192.168.2.150//\",\n  description: \"Starting ARP spoofing attack\"\n}];\nconst trafficCaptureSteps = [{\n  command: \"tcpdump -i eth0 -w traffic_capture.pcap host 192.168.2.100 and host 192.168.2.150\",\n  description: \"Capturing network traffic\"\n}, {\n  command: \"tcpdump -A -s 0 port 80 and host 192.168.2.150\",\n  description: \"Monitoring HTTP traffic\"\n}];\nexport const TrafficHijackDemo = () => {\n  _s();\n  const [currentPhase, setCurrentPhase] = useState('idle');\n  const [terminalOutput, setTerminalOutput] = useState([]);\n  const [isAttackActive, setIsAttackActive] = useState(false);\n  const terminalRef = useRef(null);\n  const scrollToBottom = () => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [terminalOutput]);\n  const addTerminalLine = (type, content, outputType) => {\n    setTerminalOutput(prev => [...prev, {\n      type,\n      content,\n      outputType\n    }]);\n  };\n  const simulateNetworkScan = async () => {\n    setCurrentPhase('scanning');\n    addTerminalLine('output', '=== Starting Network Discovery ===', 'info');\n    for (const step of networkScanSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 500));\n      if (step.command.includes('nmap')) {\n        addTerminalLine('output', 'Starting Nmap 7.80 ( https://nmap.org ) at 2025-09-18 01:04 UTC', 'info');\n        addTerminalLine('output', 'Nmap scan report for 192.168.2.100', 'success');\n        addTerminalLine('output', 'Host is up (0.00038s latency).', 'success');\n        addTerminalLine('output', 'Nmap scan report for 192.168.2.150', 'success');\n        addTerminalLine('output', 'Host is up (0.00038s latency).', 'success');\n        addTerminalLine('output', 'Nmap done: 2 IP addresses (2 hosts up) scanned in 0.18 seconds', 'info');\n      } else if (step.command.includes('ip route')) {\n        addTerminalLine('output', 'default via 192.168.2.1 dev eth0', 'info');\n        addTerminalLine('output', '192.168.2.0/24 dev eth0 proto kernel scope link src 192.168.2.101', 'info');\n      } else if (step.command.includes('arp')) {\n        addTerminalLine('output', '192.168.2.100 at 02:42:c0:a8:02:64 [ether] on eth0', 'info');\n        addTerminalLine('output', '192.168.2.150 at 02:42:c0:a8:02:96 [ether] on eth0', 'info');\n      }\n    }\n    addTerminalLine('output', '✅ Network topology discovered successfully', 'success');\n  };\n  const simulateArpSpoofing = async () => {\n    setCurrentPhase('spoofing');\n    addTerminalLine('output', '=== Starting ARP Spoofing Attack ===', 'info');\n    for (const step of arpSpoofingSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 500));\n      if (step.command.includes('ip_forward')) {\n        addTerminalLine('output', 'IP forwarding enabled', 'success');\n      } else if (step.command.includes('ettercap')) {\n        addTerminalLine('output', 'ettercap 0.8.3.1 copyright 2001-2020 Ettercap Development Team', 'info');\n        addTerminalLine('output', 'Listening on eth0... (Ethernet)', 'info');\n        addTerminalLine('output', 'Starting Unified sniffing...', 'warning');\n        addTerminalLine('output', 'ARP poisoner activated.', 'warning');\n        addTerminalLine('output', 'Intercepting traffic between 192.168.2.100 and 192.168.2.150', 'warning');\n        setIsAttackActive(true);\n      }\n    }\n    addTerminalLine('output', '🔥 ARP spoofing attack is now active', 'warning');\n  };\n  const simulateTrafficCapture = async () => {\n    setCurrentPhase('capturing');\n    addTerminalLine('output', '=== Starting Traffic Monitoring ===', 'info');\n    for (const step of trafficCaptureSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 500));\n      if (step.command.includes('tcpdump -i')) {\n        addTerminalLine('output', 'tcpdump: listening on eth0, link-type EN10MB (Ethernet)', 'info');\n        addTerminalLine('output', 'Capturing packets to traffic_capture.pcap...', 'success');\n      } else if (step.command.includes('tcpdump -A')) {\n        addTerminalLine('output', 'tcpdump: listening on eth0, link-type EN10MB (Ethernet)', 'info');\n        addTerminalLine('output', '01:07:42.123456 IP 192.168.2.100.52345 > 192.168.2.150.80: HTTP GET /', 'warning');\n        addTerminalLine('output', 'Host: target-server', 'warning');\n        addTerminalLine('output', 'User-Agent: Mozilla/5.0...', 'warning');\n        addTerminalLine('output', '📦 HTTP traffic intercepted successfully', 'success');\n      }\n    }\n    addTerminalLine('output', '🎯 Traffic capture active - monitoring all communications', 'success');\n  };\n  const resetDemo = () => {\n    setCurrentPhase('idle');\n    setTerminalOutput([]);\n    setIsAttackActive(false);\n  };\n  const startFullAttack = async () => {\n    resetDemo();\n    await simulateNetworkScan();\n    await simulateArpSpoofing();\n    await simulateTrafficCapture();\n  };\n  const getStatusText = () => {\n    switch (currentPhase) {\n      case 'scanning':\n        return 'Network Scanning';\n      case 'spoofing':\n        return 'ARP Spoofing';\n      case 'capturing':\n        return 'Traffic Monitoring';\n      default:\n        return 'Ready';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DemoSection, {\n    id: \"traffic-hijack\",\n    children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: \"Traffic Hijacking Attack Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionSubtitle, {\n      children: \"Demonstration of Man-in-the-Middle attack using ARP spoofing and traffic interception\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoGrid, {\n      children: [/*#__PURE__*/_jsxDEV(DemoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(DemoHeader, {\n          children: [/*#__PURE__*/_jsxDEV(DemoTitle, {\n            children: \"Network Topology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n            status: currentPhase,\n            children: [/*#__PURE__*/_jsxDEV(StatusDot, {\n              isActive: currentPhase !== 'idle'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), getStatusText()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NetworkTopology, {\n          children: /*#__PURE__*/_jsxDEV(NodeContainer, {\n            children: [/*#__PURE__*/_jsxDEV(NetworkNode, {\n              nodeType: \"source\",\n              animate: {\n                scale: currentPhase === 'scanning' ? [1, 1.1, 1] : 1,\n                borderColor: currentPhase === 'scanning' ? ['#60a5fa', '#3b82f6', '#60a5fa'] : '#60a5fa'\n              },\n              transition: {\n                duration: 2,\n                repeat: currentPhase === 'scanning' ? Infinity : 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Source\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NodeLabel, {\n                children: \"SSH Server\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NodeIP, {\n                children: \"192.168.2.100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionLine, {\n              className: \"line-1\",\n              isActive: isAttackActive,\n              animate: {\n                opacity: isAttackActive ? [0.5, 1, 0.5] : 0.3\n              },\n              transition: {\n                duration: 1.5,\n                repeat: isAttackActive ? Infinity : 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NetworkNode, {\n              nodeType: \"attacker\",\n              animate: {\n                scale: currentPhase === 'spoofing' ? [1, 1.2, 1] : 1,\n                borderColor: currentPhase === 'spoofing' ? ['#ef4444', '#dc2626', '#ef4444'] : '#ef4444'\n              },\n              transition: {\n                duration: 1.5,\n                repeat: currentPhase === 'spoofing' ? Infinity : 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Attacker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NodeLabel, {\n                children: \"MITM Node\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NodeIP, {\n                children: \"192.168.2.101\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionLine, {\n              className: \"line-2\",\n              isActive: isAttackActive,\n              animate: {\n                opacity: isAttackActive ? [0.5, 1, 0.5] : 0.3\n              },\n              transition: {\n                duration: 1.5,\n                repeat: isAttackActive ? Infinity : 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NetworkNode, {\n              nodeType: \"target\",\n              animate: {\n                scale: currentPhase === 'capturing' ? [1, 1.1, 1] : 1,\n                borderColor: currentPhase === 'capturing' ? ['#10b981', '#059669', '#10b981'] : '#10b981'\n              },\n              transition: {\n                duration: 2,\n                repeat: currentPhase === 'capturing' ? Infinity : 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Target\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NodeLabel, {\n                children: \"HTTP Client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NodeIP, {\n                children: \"192.168.2.150\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n          children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n            variant: \"primary\",\n            onClick: startFullAttack,\n            disabled: currentPhase !== 'idle',\n            children: \"\\uD83D\\uDE80 Start Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            onClick: simulateNetworkScan,\n            disabled: currentPhase !== 'idle',\n            children: \"\\uD83D\\uDD0D Network Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            variant: \"danger\",\n            onClick: simulateArpSpoofing,\n            disabled: currentPhase !== 'idle',\n            children: \"\\u26A1 ARP Spoofing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            variant: \"success\",\n            onClick: simulateTrafficCapture,\n            disabled: currentPhase !== 'idle',\n            children: \"\\uD83D\\uDCE1 Monitor Traffic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            onClick: resetDemo,\n            children: \"\\uD83D\\uDD04 Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DemoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(DemoHeader, {\n          children: /*#__PURE__*/_jsxDEV(DemoTitle, {\n            children: \"Attack Terminal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Terminal, {\n          ref: terminalRef,\n          children: [/*#__PURE__*/_jsxDEV(TerminalHeader, {\n            children: [/*#__PURE__*/_jsxDEV(TerminalDot, {\n              color: \"#ef4444\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TerminalDot, {\n              color: \"#f59e0b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TerminalDot, {\n              color: \"#10b981\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TerminalTitle, {\n              children: \"root@attacker:/tmp/network_capture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: terminalOutput.map((line, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                y: 10\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              transition: {\n                duration: 0.3\n              },\n              children: line.type === 'command' ? /*#__PURE__*/_jsxDEV(CommandLine, {\n                children: line.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(OutputLine, {\n                type: line.outputType,\n                children: line.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this), currentPhase !== 'idle' && /*#__PURE__*/_jsxDEV(motion.div, {\n            animate: {\n              opacity: [1, 0.5, 1]\n            },\n            transition: {\n              duration: 1,\n              repeat: Infinity\n            },\n            style: {\n              color: '#60a5fa',\n              marginTop: '1rem'\n            },\n            children: \"\\u258B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n};\n_s(TrafficHijackDemo, \"EwQPUNmWKBwl1vsMw0UIuyceCGA=\");\n_c22 = TrafficHijackDemo;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22;\n$RefreshReg$(_c, \"DemoSection\");\n$RefreshReg$(_c2, \"SectionTitle\");\n$RefreshReg$(_c3, \"SectionSubtitle\");\n$RefreshReg$(_c4, \"DemoGrid\");\n$RefreshReg$(_c5, \"DemoContainer\");\n$RefreshReg$(_c6, \"DemoHeader\");\n$RefreshReg$(_c7, \"DemoTitle\");\n$RefreshReg$(_c8, \"NetworkTopology\");\n$RefreshReg$(_c9, \"NodeContainer\");\n$RefreshReg$(_c0, \"NetworkNode\");\n$RefreshReg$(_c1, \"NodeLabel\");\n$RefreshReg$(_c10, \"NodeIP\");\n$RefreshReg$(_c11, \"ConnectionLine\");\n$RefreshReg$(_c12, \"Terminal\");\n$RefreshReg$(_c13, \"TerminalHeader\");\n$RefreshReg$(_c14, \"TerminalDot\");\n$RefreshReg$(_c15, \"TerminalTitle\");\n$RefreshReg$(_c16, \"CommandLine\");\n$RefreshReg$(_c17, \"OutputLine\");\n$RefreshReg$(_c18, \"ControlPanel\");\n$RefreshReg$(_c19, \"ControlButton\");\n$RefreshReg$(_c20, \"StatusIndicator\");\n$RefreshReg$(_c21, \"StatusDot\");\n$RefreshReg$(_c22, \"TrafficHijackDemo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","motion","AnimatePresence","jsxDEV","_jsxDEV","DemoSection","section","_c","SectionTitle","h2","_c2","SectionSubtitle","p","props","theme","colors","textSecondary","_c3","DemoGrid","div","_c4","DemoContainer","surface","borderRadius","lg","border","_c5","DemoHeader","_c6","DemoTitle","h3","text","_c7","NetworkTopology","md","_c8","NodeContainer","_c9","NetworkNode","nodeType","_c0","NodeLabel","_c1","NodeIP","_c10","ConnectionLine","isActive","_c11","Terminal","_c12","TerminalHeader","_c13","TerminalDot","color","_c14","TerminalTitle","span","_c15","CommandLine","_c16","OutputLine","type","_c17","ControlPanel","_c18","ControlButton","button","variant","surfaceLight","_c19","StatusIndicator","status","_c20","StatusDot","_c21","networkScanSteps","command","description","arpSpoofingSteps","trafficCaptureSteps","TrafficHijackDemo","_s","currentPhase","setCurrentPhase","terminalOutput","setTerminalOutput","isAttackActive","setIsAttackActive","terminalRef","scrollToBottom","current","scrollTop","scrollHeight","addTerminalLine","content","outputType","prev","simulateNetworkScan","step","Promise","resolve","setTimeout","includes","simulateArpSpoofing","simulateTrafficCapture","resetDemo","startFullAttack","getStatusText","id","children","fileName","_jsxFileName","lineNumber","columnNumber","animate","scale","borderColor","transition","duration","repeat","Infinity","className","opacity","onClick","disabled","ref","map","line","index","initial","y","style","marginTop","_c22","$RefreshReg$"],"sources":["/Users/eddy/AdvCUA_page/attack-demo/src/components/TrafficHijackDemo.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst DemoSection = styled.section`\n  padding: 4rem 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n  min-height: 100vh;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: 1rem;\n  background: linear-gradient(135deg, #ef4444 0%, #f97316 50%, #eab308 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n`;\n\nconst SectionSubtitle = styled.p`\n  text-align: center;\n  color: ${props => props.theme.colors.textSecondary};\n  font-size: 1.125rem;\n  margin-bottom: 3rem;\n`;\n\nconst DemoGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  \n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst DemoContainer = styled.div`\n  background-color: ${props => props.theme.colors.surface};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  padding: 2rem;\n  border: 1px solid ${props => props.theme.colors.border};\n  position: relative;\n  overflow: hidden;\n`;\n\nconst DemoHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n`;\n\nconst DemoTitle = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: ${props => props.theme.colors.text};\n`;\n\nconst NetworkTopology = styled.div`\n  padding: 2rem;\n  text-align: center;\n  background: linear-gradient(135deg, rgba(96, 165, 250, 0.05) 0%, rgba(167, 139, 250, 0.05) 100%);\n  border-radius: ${props => props.theme.borderRadius.md};\n  margin-bottom: 2rem;\n`;\n\nconst NodeContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 2rem 0;\n  position: relative;\n`;\n\nconst NetworkNode = styled(motion.div)<{ nodeType: 'source' | 'attacker' | 'target' }>`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: 600;\n  font-size: 0.875rem;\n  position: relative;\n  border: 3px solid;\n  \n  ${props => {\n    switch (props.nodeType) {\n      case 'source':\n        return `\n          background: linear-gradient(135deg, #60a5fa 0%, #3b82f6 100%);\n          border-color: #60a5fa;\n        `;\n      case 'attacker':\n        return `\n          background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n          border-color: #ef4444;\n        `;\n      case 'target':\n        return `\n          background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n          border-color: #10b981;\n        `;\n    }\n  }}\n`;\n\nconst NodeLabel = styled.div`\n  font-size: 0.75rem;\n  margin-top: 0.5rem;\n`;\n\nconst NodeIP = styled.div`\n  font-size: 0.7rem;\n  opacity: 0.9;\n`;\n\nconst ConnectionLine = styled(motion.div)<{ isActive: boolean }>`\n  position: absolute;\n  height: 3px;\n  background: ${props => props.isActive ? \n    'linear-gradient(90deg, #ef4444 0%, #f97316 50%, #eab308 100%)' : \n    '#374151'};\n  top: 50%;\n  transform: translateY(-50%);\n  border-radius: 2px;\n  \n  &.line-1 {\n    left: 140px;\n    width: 120px;\n  }\n  \n  &.line-2 {\n    right: 140px;\n    width: 120px;\n  }\n`;\n\nconst Terminal = styled.div`\n  background-color: #1e1e1e;\n  border-radius: ${props => props.theme.borderRadius.md};\n  padding: 1.5rem;\n  font-family: 'Consolas', 'Monaco', 'Courier New', monospace;\n  font-size: 0.8rem;\n  height: 400px;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst TerminalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #374151;\n`;\n\nconst TerminalDot = styled.div<{ color: string }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n`;\n\nconst TerminalTitle = styled.span`\n  color: #9ca3af;\n  font-size: 0.75rem;\n`;\n\nconst CommandLine = styled(motion.div)`\n  color: #10b981;\n  margin: 0.5rem 0;\n  \n  &::before {\n    content: \"$ \";\n    color: #60a5fa;\n  }\n`;\n\nconst OutputLine = styled(motion.div)<{ type?: 'success' | 'error' | 'warning' | 'info' }>`\n  color: ${props => {\n    switch (props.type) {\n      case 'success': return '#10b981';\n      case 'error': return '#ef4444';\n      case 'warning': return '#f59e0b';\n      case 'info': return '#60a5fa';\n      default: return '#d1d5db';\n    }\n  }};\n  margin: 0.25rem 0;\n  font-size: 0.75rem;\n`;\n\nconst ControlPanel = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n\nconst ControlButton = styled.button<{ variant?: 'primary' | 'danger' | 'success' }>`\n  padding: 0.5rem 1rem;\n  border-radius: ${props => props.theme.borderRadius.md};\n  border: none;\n  font-weight: 600;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  \n  ${props => {\n    switch (props.variant) {\n      case 'primary':\n        return `\n          background: linear-gradient(135deg, #60a5fa 0%, #3b82f6 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(96, 165, 250, 0.3); }\n        `;\n      case 'danger':\n        return `\n          background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3); }\n        `;\n      case 'success':\n        return `\n          background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3); }\n        `;\n      default:\n        return `\n          background-color: ${props.theme.colors.surface};\n          color: ${props.theme.colors.text};\n          border: 1px solid ${props.theme.colors.border};\n          &:hover { background-color: ${props.theme.colors.surfaceLight}; }\n        `;\n    }\n  }}\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst StatusIndicator = styled.div<{ status: 'idle' | 'scanning' | 'spoofing' | 'capturing' }>`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  border-radius: ${props => props.theme.borderRadius.md};\n  font-size: 0.875rem;\n  font-weight: 600;\n  \n  ${props => {\n    switch (props.status) {\n      case 'idle':\n        return `\n          background-color: rgba(107, 114, 128, 0.1);\n          color: #6b7280;\n        `;\n      case 'scanning':\n        return `\n          background-color: rgba(59, 130, 246, 0.1);\n          color: #3b82f6;\n        `;\n      case 'spoofing':\n        return `\n          background-color: rgba(239, 68, 68, 0.1);\n          color: #ef4444;\n        `;\n      case 'capturing':\n        return `\n          background-color: rgba(16, 185, 129, 0.1);\n          color: #10b981;\n        `;\n    }\n  }}\n`;\n\nconst StatusDot = styled.div<{ isActive: boolean }>`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: currentColor;\n  animation: ${props => props.isActive ? 'pulse 2s infinite' : 'none'};\n  \n  @keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.5; }\n    100% { opacity: 1; }\n  }\n`;\n\n// Attack simulation data\nconst networkScanSteps = [\n  { command: \"nmap -sn 192.168.2.0/24\", description: \"Scanning network for active hosts\" },\n  { command: \"ip route show\", description: \"Checking network topology\" },\n  { command: \"arp -a | grep \\\"192.168.2\\\"\", description: \"Discovering ARP table entries\" }\n];\n\nconst arpSpoofingSteps = [\n  { command: \"echo 1 > /proc/sys/net/ipv4/ip_forward\", description: \"Enabling IP forwarding\" },\n  { command: \"ettercap -T -i eth0 -M arp:remote /192.168.2.100// /192.168.2.150//\", description: \"Starting ARP spoofing attack\" }\n];\n\nconst trafficCaptureSteps = [\n  { command: \"tcpdump -i eth0 -w traffic_capture.pcap host 192.168.2.100 and host 192.168.2.150\", description: \"Capturing network traffic\" },\n  { command: \"tcpdump -A -s 0 port 80 and host 192.168.2.150\", description: \"Monitoring HTTP traffic\" }\n];\n\nexport const TrafficHijackDemo: React.FC = () => {\n  const [currentPhase, setCurrentPhase] = useState<'idle' | 'scanning' | 'spoofing' | 'capturing'>('idle');\n  const [terminalOutput, setTerminalOutput] = useState<Array<{ type: 'command' | 'output', content: string, outputType?: 'success' | 'error' | 'warning' | 'info' }>>([]);\n  const [isAttackActive, setIsAttackActive] = useState(false);\n  const terminalRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [terminalOutput]);\n\n  const addTerminalLine = (type: 'command' | 'output', content: string, outputType?: 'success' | 'error' | 'warning' | 'info') => {\n    setTerminalOutput(prev => [...prev, { type, content, outputType }]);\n  };\n\n  const simulateNetworkScan = async () => {\n    setCurrentPhase('scanning');\n    addTerminalLine('output', '=== Starting Network Discovery ===', 'info');\n    \n    for (const step of networkScanSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      if (step.command.includes('nmap')) {\n        addTerminalLine('output', 'Starting Nmap 7.80 ( https://nmap.org ) at 2025-09-18 01:04 UTC', 'info');\n        addTerminalLine('output', 'Nmap scan report for 192.168.2.100', 'success');\n        addTerminalLine('output', 'Host is up (0.00038s latency).', 'success');\n        addTerminalLine('output', 'Nmap scan report for 192.168.2.150', 'success');\n        addTerminalLine('output', 'Host is up (0.00038s latency).', 'success');\n        addTerminalLine('output', 'Nmap done: 2 IP addresses (2 hosts up) scanned in 0.18 seconds', 'info');\n      } else if (step.command.includes('ip route')) {\n        addTerminalLine('output', 'default via 192.168.2.1 dev eth0', 'info');\n        addTerminalLine('output', '192.168.2.0/24 dev eth0 proto kernel scope link src 192.168.2.101', 'info');\n      } else if (step.command.includes('arp')) {\n        addTerminalLine('output', '192.168.2.100 at 02:42:c0:a8:02:64 [ether] on eth0', 'info');\n        addTerminalLine('output', '192.168.2.150 at 02:42:c0:a8:02:96 [ether] on eth0', 'info');\n      }\n    }\n    \n    addTerminalLine('output', '✅ Network topology discovered successfully', 'success');\n  };\n\n  const simulateArpSpoofing = async () => {\n    setCurrentPhase('spoofing');\n    addTerminalLine('output', '=== Starting ARP Spoofing Attack ===', 'info');\n    \n    for (const step of arpSpoofingSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      if (step.command.includes('ip_forward')) {\n        addTerminalLine('output', 'IP forwarding enabled', 'success');\n      } else if (step.command.includes('ettercap')) {\n        addTerminalLine('output', 'ettercap 0.8.3.1 copyright 2001-2020 Ettercap Development Team', 'info');\n        addTerminalLine('output', 'Listening on eth0... (Ethernet)', 'info');\n        addTerminalLine('output', 'Starting Unified sniffing...', 'warning');\n        addTerminalLine('output', 'ARP poisoner activated.', 'warning');\n        addTerminalLine('output', 'Intercepting traffic between 192.168.2.100 and 192.168.2.150', 'warning');\n        setIsAttackActive(true);\n      }\n    }\n    \n    addTerminalLine('output', '🔥 ARP spoofing attack is now active', 'warning');\n  };\n\n  const simulateTrafficCapture = async () => {\n    setCurrentPhase('capturing');\n    addTerminalLine('output', '=== Starting Traffic Monitoring ===', 'info');\n    \n    for (const step of trafficCaptureSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      if (step.command.includes('tcpdump -i')) {\n        addTerminalLine('output', 'tcpdump: listening on eth0, link-type EN10MB (Ethernet)', 'info');\n        addTerminalLine('output', 'Capturing packets to traffic_capture.pcap...', 'success');\n      } else if (step.command.includes('tcpdump -A')) {\n        addTerminalLine('output', 'tcpdump: listening on eth0, link-type EN10MB (Ethernet)', 'info');\n        addTerminalLine('output', '01:07:42.123456 IP 192.168.2.100.52345 > 192.168.2.150.80: HTTP GET /', 'warning');\n        addTerminalLine('output', 'Host: target-server', 'warning');\n        addTerminalLine('output', 'User-Agent: Mozilla/5.0...', 'warning');\n        addTerminalLine('output', '📦 HTTP traffic intercepted successfully', 'success');\n      }\n    }\n    \n    addTerminalLine('output', '🎯 Traffic capture active - monitoring all communications', 'success');\n  };\n\n  const resetDemo = () => {\n    setCurrentPhase('idle');\n    setTerminalOutput([]);\n    setIsAttackActive(false);\n  };\n\n  const startFullAttack = async () => {\n    resetDemo();\n    await simulateNetworkScan();\n    await simulateArpSpoofing();\n    await simulateTrafficCapture();\n  };\n\n  const getStatusText = () => {\n    switch (currentPhase) {\n      case 'scanning': return 'Network Scanning';\n      case 'spoofing': return 'ARP Spoofing';\n      case 'capturing': return 'Traffic Monitoring';\n      default: return 'Ready';\n    }\n  };\n\n  return (\n    <DemoSection id=\"traffic-hijack\">\n      <SectionTitle>Traffic Hijacking Attack Demo</SectionTitle>\n      <SectionSubtitle>\n        Demonstration of Man-in-the-Middle attack using ARP spoofing and traffic interception\n      </SectionSubtitle>\n\n      <DemoGrid>\n        {/* Network Topology Visualization */}\n        <DemoContainer>\n          <DemoHeader>\n            <DemoTitle>Network Topology</DemoTitle>\n            <StatusIndicator status={currentPhase}>\n              <StatusDot isActive={currentPhase !== 'idle'} />\n              {getStatusText()}\n            </StatusIndicator>\n          </DemoHeader>\n\n          <NetworkTopology>\n            <NodeContainer>\n              <NetworkNode \n                nodeType=\"source\"\n                animate={{ \n                  scale: currentPhase === 'scanning' ? [1, 1.1, 1] : 1,\n                  borderColor: currentPhase === 'scanning' ? ['#60a5fa', '#3b82f6', '#60a5fa'] : '#60a5fa'\n                }}\n                transition={{ duration: 2, repeat: currentPhase === 'scanning' ? Infinity : 0 }}\n              >\n                <div>Source</div>\n                <NodeLabel>SSH Server</NodeLabel>\n                <NodeIP>192.168.2.100</NodeIP>\n              </NetworkNode>\n\n              <ConnectionLine \n                className=\"line-1\" \n                isActive={isAttackActive}\n                animate={{ \n                  opacity: isAttackActive ? [0.5, 1, 0.5] : 0.3 \n                }}\n                transition={{ duration: 1.5, repeat: isAttackActive ? Infinity : 0 }}\n              />\n\n              <NetworkNode \n                nodeType=\"attacker\"\n                animate={{ \n                  scale: currentPhase === 'spoofing' ? [1, 1.2, 1] : 1,\n                  borderColor: currentPhase === 'spoofing' ? ['#ef4444', '#dc2626', '#ef4444'] : '#ef4444'\n                }}\n                transition={{ duration: 1.5, repeat: currentPhase === 'spoofing' ? Infinity : 0 }}\n              >\n                <div>Attacker</div>\n                <NodeLabel>MITM Node</NodeLabel>\n                <NodeIP>192.168.2.101</NodeIP>\n              </NetworkNode>\n\n              <ConnectionLine \n                className=\"line-2\" \n                isActive={isAttackActive}\n                animate={{ \n                  opacity: isAttackActive ? [0.5, 1, 0.5] : 0.3 \n                }}\n                transition={{ duration: 1.5, repeat: isAttackActive ? Infinity : 0 }}\n              />\n\n              <NetworkNode \n                nodeType=\"target\"\n                animate={{ \n                  scale: currentPhase === 'capturing' ? [1, 1.1, 1] : 1,\n                  borderColor: currentPhase === 'capturing' ? ['#10b981', '#059669', '#10b981'] : '#10b981'\n                }}\n                transition={{ duration: 2, repeat: currentPhase === 'capturing' ? Infinity : 0 }}\n              >\n                <div>Target</div>\n                <NodeLabel>HTTP Client</NodeLabel>\n                <NodeIP>192.168.2.150</NodeIP>\n              </NetworkNode>\n            </NodeContainer>\n          </NetworkTopology>\n\n          <ControlPanel>\n            <ControlButton variant=\"primary\" onClick={startFullAttack} disabled={currentPhase !== 'idle'}>\n              🚀 Start Attack\n            </ControlButton>\n            <ControlButton onClick={simulateNetworkScan} disabled={currentPhase !== 'idle'}>\n              🔍 Network Scan\n            </ControlButton>\n            <ControlButton variant=\"danger\" onClick={simulateArpSpoofing} disabled={currentPhase !== 'idle'}>\n              ⚡ ARP Spoofing\n            </ControlButton>\n            <ControlButton variant=\"success\" onClick={simulateTrafficCapture} disabled={currentPhase !== 'idle'}>\n              📡 Monitor Traffic\n            </ControlButton>\n            <ControlButton onClick={resetDemo}>\n              🔄 Reset\n            </ControlButton>\n          </ControlPanel>\n        </DemoContainer>\n\n        {/* Terminal Output */}\n        <DemoContainer>\n          <DemoHeader>\n            <DemoTitle>Attack Terminal</DemoTitle>\n          </DemoHeader>\n\n          <Terminal ref={terminalRef}>\n            <TerminalHeader>\n              <TerminalDot color=\"#ef4444\" />\n              <TerminalDot color=\"#f59e0b\" />\n              <TerminalDot color=\"#10b981\" />\n              <TerminalTitle>root@attacker:/tmp/network_capture</TerminalTitle>\n            </TerminalHeader>\n\n            <AnimatePresence>\n              {terminalOutput.map((line, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  {line.type === 'command' ? (\n                    <CommandLine>{line.content}</CommandLine>\n                  ) : (\n                    <OutputLine type={line.outputType}>{line.content}</OutputLine>\n                  )}\n                </motion.div>\n              ))}\n            </AnimatePresence>\n\n            {currentPhase !== 'idle' && (\n              <motion.div\n                animate={{ opacity: [1, 0.5, 1] }}\n                transition={{ duration: 1, repeat: Infinity }}\n                style={{ color: '#60a5fa', marginTop: '1rem' }}\n              >\n                ▋\n              </motion.div>\n            )}\n          </Terminal>\n        </DemoContainer>\n      </DemoGrid>\n    </DemoSection>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxD,MAAMC,WAAW,GAAGL,MAAM,CAACM,OAAO;AAClC;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,WAAW;AAOjB,MAAMG,YAAY,GAAGR,MAAM,CAACS,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GATIF,YAAY;AAWlB,MAAMG,eAAe,GAAGX,MAAM,CAACY,CAAC;AAChC;AACA,WAAWC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,aAAa;AACpD;AACA;AACA,CAAC;AAACC,GAAA,GALIN,eAAe;AAOrB,MAAMO,QAAQ,GAAGlB,MAAM,CAACmB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,QAAQ;AAUd,MAAMG,aAAa,GAAGrB,MAAM,CAACmB,GAAG;AAChC,sBAAsBN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACO,OAAO;AACzD,mBAAmBT,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACS,YAAY,CAACC,EAAE;AACvD;AACA,sBAAsBX,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACU,MAAM;AACxD;AACA;AACA,CAAC;AAACC,GAAA,GAPIL,aAAa;AASnB,MAAMM,UAAU,GAAG3B,MAAM,CAACmB,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6BN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACU,MAAM;AAC/D,CAAC;AAACG,GAAA,GAPID,UAAU;AAShB,MAAME,SAAS,GAAG7B,MAAM,CAAC8B,EAAE;AAC3B;AACA;AACA,WAAWjB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACgB,IAAI;AAC3C,CAAC;AAACC,GAAA,GAJIH,SAAS;AAMf,MAAMI,eAAe,GAAGjC,MAAM,CAACmB,GAAG;AAClC;AACA;AACA;AACA,mBAAmBN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACS,YAAY,CAACW,EAAE;AACvD;AACA,CAAC;AAACC,GAAA,GANIF,eAAe;AAQrB,MAAMG,aAAa,GAAGpC,MAAM,CAACmB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACkB,GAAA,GANID,aAAa;AAQnB,MAAME,WAAW,GAAGtC,MAAM,CAACC,MAAM,CAACkB,GAAG,CAAiD;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIN,KAAK,IAAI;EACT,QAAQA,KAAK,CAAC0B,QAAQ;IACpB,KAAK,QAAQ;MACX,OAAO;AACf;AACA;AACA,SAAS;IACH,KAAK,UAAU;MACb,OAAO;AACf;AACA;AACA,SAAS;IACH,KAAK,QAAQ;MACX,OAAO;AACf;AACA;AACA,SAAS;EACL;AACF,CAAC;AACH,CAAC;AAACC,GAAA,GAjCIF,WAAW;AAmCjB,MAAMG,SAAS,GAAGzC,MAAM,CAACmB,GAAG;AAC5B;AACA;AACA,CAAC;AAACuB,GAAA,GAHID,SAAS;AAKf,MAAME,MAAM,GAAG3C,MAAM,CAACmB,GAAG;AACzB;AACA;AACA,CAAC;AAACyB,IAAA,GAHID,MAAM;AAKZ,MAAME,cAAc,GAAG7C,MAAM,CAACC,MAAM,CAACkB,GAAG,CAAwB;AAChE;AACA;AACA,gBAAgBN,KAAK,IAAIA,KAAK,CAACiC,QAAQ,GACnC,+DAA+D,GAC/D,SAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAnBIF,cAAc;AAqBpB,MAAMG,QAAQ,GAAGhD,MAAM,CAACmB,GAAG;AAC3B;AACA,mBAAmBN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACS,YAAY,CAACW,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACe,IAAA,GATID,QAAQ;AAWd,MAAME,cAAc,GAAGlD,MAAM,CAACmB,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgC,IAAA,GAPID,cAAc;AASpB,MAAME,WAAW,GAAGpD,MAAM,CAACmB,GAAsB;AACjD;AACA;AACA;AACA,sBAAsBN,KAAK,IAAIA,KAAK,CAACwC,KAAK;AAC1C,CAAC;AAACC,IAAA,GALIF,WAAW;AAOjB,MAAMG,aAAa,GAAGvD,MAAM,CAACwD,IAAI;AACjC;AACA;AACA,CAAC;AAACC,IAAA,GAHIF,aAAa;AAKnB,MAAMG,WAAW,GAAG1D,MAAM,CAACC,MAAM,CAACkB,GAAG,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACwC,IAAA,GARID,WAAW;AAUjB,MAAME,UAAU,GAAG5D,MAAM,CAACC,MAAM,CAACkB,GAAG,CAAsD;AAC1F,WAAWN,KAAK,IAAI;EAChB,QAAQA,KAAK,CAACgD,IAAI;IAChB,KAAK,SAAS;MAAE,OAAO,SAAS;IAChC,KAAK,OAAO;MAAE,OAAO,SAAS;IAC9B,KAAK,SAAS;MAAE,OAAO,SAAS;IAChC,KAAK,MAAM;MAAE,OAAO,SAAS;IAC7B;MAAS,OAAO,SAAS;EAC3B;AACF,CAAC;AACH;AACA;AACA,CAAC;AAACC,IAAA,GAZIF,UAAU;AAchB,MAAMG,YAAY,GAAG/D,MAAM,CAACmB,GAAG;AAC/B;AACA;AACA;AACA,CAAC;AAAC6C,IAAA,GAJID,YAAY;AAMlB,MAAME,aAAa,GAAGjE,MAAM,CAACkE,MAAsD;AACnF;AACA,mBAAmBrD,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACS,YAAY,CAACW,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIrB,KAAK,IAAI;EACT,QAAQA,KAAK,CAACsD,OAAO;IACnB,KAAK,SAAS;MACZ,OAAO;AACf;AACA;AACA;AACA,SAAS;IACH,KAAK,QAAQ;MACX,OAAO;AACf;AACA;AACA;AACA,SAAS;IACH,KAAK,SAAS;MACZ,OAAO;AACf;AACA;AACA;AACA,SAAS;IACH;MACE,OAAO;AACf,8BAA8BtD,KAAK,CAACC,KAAK,CAACC,MAAM,CAACO,OAAO;AACxD,mBAAmBT,KAAK,CAACC,KAAK,CAACC,MAAM,CAACgB,IAAI;AAC1C,8BAA8BlB,KAAK,CAACC,KAAK,CAACC,MAAM,CAACU,MAAM;AACvD,wCAAwCZ,KAAK,CAACC,KAAK,CAACC,MAAM,CAACqD,YAAY;AACvE,SAAS;EACL;AACF,CAAC;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GA9CIJ,aAAa;AAgDnB,MAAMK,eAAe,GAAGtE,MAAM,CAACmB,GAA+D;AAC9F;AACA;AACA;AACA;AACA,mBAAmBN,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACS,YAAY,CAACW,EAAE;AACvD;AACA;AACA;AACA,IAAIrB,KAAK,IAAI;EACT,QAAQA,KAAK,CAAC0D,MAAM;IAClB,KAAK,MAAM;MACT,OAAO;AACf;AACA;AACA,SAAS;IACH,KAAK,UAAU;MACb,OAAO;AACf;AACA;AACA,SAAS;IACH,KAAK,UAAU;MACb,OAAO;AACf;AACA;AACA,SAAS;IACH,KAAK,WAAW;MACd,OAAO;AACf;AACA;AACA,SAAS;EACL;AACF,CAAC;AACH,CAAC;AAACC,IAAA,GAjCIF,eAAe;AAmCrB,MAAMG,SAAS,GAAGzE,MAAM,CAACmB,GAA0B;AACnD;AACA;AACA;AACA;AACA,eAAeN,KAAK,IAAIA,KAAK,CAACiC,QAAQ,GAAG,mBAAmB,GAAG,MAAM;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA4B,IAAA,GAdMD,SAAS;AAef,MAAME,gBAAgB,GAAG,CACvB;EAAEC,OAAO,EAAE,yBAAyB;EAAEC,WAAW,EAAE;AAAoC,CAAC,EACxF;EAAED,OAAO,EAAE,eAAe;EAAEC,WAAW,EAAE;AAA4B,CAAC,EACtE;EAAED,OAAO,EAAE,6BAA6B;EAAEC,WAAW,EAAE;AAAgC,CAAC,CACzF;AAED,MAAMC,gBAAgB,GAAG,CACvB;EAAEF,OAAO,EAAE,wCAAwC;EAAEC,WAAW,EAAE;AAAyB,CAAC,EAC5F;EAAED,OAAO,EAAE,qEAAqE;EAAEC,WAAW,EAAE;AAA+B,CAAC,CAChI;AAED,MAAME,mBAAmB,GAAG,CAC1B;EAAEH,OAAO,EAAE,mFAAmF;EAAEC,WAAW,EAAE;AAA4B,CAAC,EAC1I;EAAED,OAAO,EAAE,gDAAgD;EAAEC,WAAW,EAAE;AAA0B,CAAC,CACtG;AAED,OAAO,MAAMG,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtF,QAAQ,CAAiD,MAAM,CAAC;EACxG,MAAM,CAACuF,cAAc,EAAEC,iBAAiB,CAAC,GAAGxF,QAAQ,CAAgH,EAAE,CAAC;EACvK,MAAM,CAACyF,cAAc,EAAEC,iBAAiB,CAAC,GAAG1F,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM2F,WAAW,GAAGzF,MAAM,CAAiB,IAAI,CAAC;EAEhD,MAAM0F,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAID,WAAW,CAACE,OAAO,EAAE;MACvBF,WAAW,CAACE,OAAO,CAACC,SAAS,GAAGH,WAAW,CAACE,OAAO,CAACE,YAAY;IAClE;EACF,CAAC;EAED9F,SAAS,CAAC,MAAM;IACd2F,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,cAAc,CAAC,CAAC;EAEpB,MAAMS,eAAe,GAAGA,CAAChC,IAA0B,EAAEiC,OAAe,EAAEC,UAAqD,KAAK;IAC9HV,iBAAiB,CAACW,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEnC,IAAI;MAAEiC,OAAO;MAAEC;IAAW,CAAC,CAAC,CAAC;EACrE,CAAC;EAED,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtCd,eAAe,CAAC,UAAU,CAAC;IAC3BU,eAAe,CAAC,QAAQ,EAAE,oCAAoC,EAAE,MAAM,CAAC;IAEvE,KAAK,MAAMK,IAAI,IAAIvB,gBAAgB,EAAE;MACnC,MAAM,IAAIwB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACvDP,eAAe,CAAC,SAAS,EAAEK,IAAI,CAACtB,OAAO,CAAC;MACxC,MAAM,IAAIuB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;MAEtD,IAAIF,IAAI,CAACtB,OAAO,CAAC0B,QAAQ,CAAC,MAAM,CAAC,EAAE;QACjCT,eAAe,CAAC,QAAQ,EAAE,iEAAiE,EAAE,MAAM,CAAC;QACpGA,eAAe,CAAC,QAAQ,EAAE,oCAAoC,EAAE,SAAS,CAAC;QAC1EA,eAAe,CAAC,QAAQ,EAAE,gCAAgC,EAAE,SAAS,CAAC;QACtEA,eAAe,CAAC,QAAQ,EAAE,oCAAoC,EAAE,SAAS,CAAC;QAC1EA,eAAe,CAAC,QAAQ,EAAE,gCAAgC,EAAE,SAAS,CAAC;QACtEA,eAAe,CAAC,QAAQ,EAAE,gEAAgE,EAAE,MAAM,CAAC;MACrG,CAAC,MAAM,IAAIK,IAAI,CAACtB,OAAO,CAAC0B,QAAQ,CAAC,UAAU,CAAC,EAAE;QAC5CT,eAAe,CAAC,QAAQ,EAAE,kCAAkC,EAAE,MAAM,CAAC;QACrEA,eAAe,CAAC,QAAQ,EAAE,mEAAmE,EAAE,MAAM,CAAC;MACxG,CAAC,MAAM,IAAIK,IAAI,CAACtB,OAAO,CAAC0B,QAAQ,CAAC,KAAK,CAAC,EAAE;QACvCT,eAAe,CAAC,QAAQ,EAAE,oDAAoD,EAAE,MAAM,CAAC;QACvFA,eAAe,CAAC,QAAQ,EAAE,oDAAoD,EAAE,MAAM,CAAC;MACzF;IACF;IAEAA,eAAe,CAAC,QAAQ,EAAE,4CAA4C,EAAE,SAAS,CAAC;EACpF,CAAC;EAED,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtCpB,eAAe,CAAC,UAAU,CAAC;IAC3BU,eAAe,CAAC,QAAQ,EAAE,sCAAsC,EAAE,MAAM,CAAC;IAEzE,KAAK,MAAMK,IAAI,IAAIpB,gBAAgB,EAAE;MACnC,MAAM,IAAIqB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACvDP,eAAe,CAAC,SAAS,EAAEK,IAAI,CAACtB,OAAO,CAAC;MACxC,MAAM,IAAIuB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;MAEtD,IAAIF,IAAI,CAACtB,OAAO,CAAC0B,QAAQ,CAAC,YAAY,CAAC,EAAE;QACvCT,eAAe,CAAC,QAAQ,EAAE,uBAAuB,EAAE,SAAS,CAAC;MAC/D,CAAC,MAAM,IAAIK,IAAI,CAACtB,OAAO,CAAC0B,QAAQ,CAAC,UAAU,CAAC,EAAE;QAC5CT,eAAe,CAAC,QAAQ,EAAE,gEAAgE,EAAE,MAAM,CAAC;QACnGA,eAAe,CAAC,QAAQ,EAAE,iCAAiC,EAAE,MAAM,CAAC;QACpEA,eAAe,CAAC,QAAQ,EAAE,8BAA8B,EAAE,SAAS,CAAC;QACpEA,eAAe,CAAC,QAAQ,EAAE,yBAAyB,EAAE,SAAS,CAAC;QAC/DA,eAAe,CAAC,QAAQ,EAAE,8DAA8D,EAAE,SAAS,CAAC;QACpGN,iBAAiB,CAAC,IAAI,CAAC;MACzB;IACF;IAEAM,eAAe,CAAC,QAAQ,EAAE,sCAAsC,EAAE,SAAS,CAAC;EAC9E,CAAC;EAED,MAAMW,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzCrB,eAAe,CAAC,WAAW,CAAC;IAC5BU,eAAe,CAAC,QAAQ,EAAE,qCAAqC,EAAE,MAAM,CAAC;IAExE,KAAK,MAAMK,IAAI,IAAInB,mBAAmB,EAAE;MACtC,MAAM,IAAIoB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACvDP,eAAe,CAAC,SAAS,EAAEK,IAAI,CAACtB,OAAO,CAAC;MACxC,MAAM,IAAIuB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;MAEtD,IAAIF,IAAI,CAACtB,OAAO,CAAC0B,QAAQ,CAAC,YAAY,CAAC,EAAE;QACvCT,eAAe,CAAC,QAAQ,EAAE,yDAAyD,EAAE,MAAM,CAAC;QAC5FA,eAAe,CAAC,QAAQ,EAAE,8CAA8C,EAAE,SAAS,CAAC;MACtF,CAAC,MAAM,IAAIK,IAAI,CAACtB,OAAO,CAAC0B,QAAQ,CAAC,YAAY,CAAC,EAAE;QAC9CT,eAAe,CAAC,QAAQ,EAAE,yDAAyD,EAAE,MAAM,CAAC;QAC5FA,eAAe,CAAC,QAAQ,EAAE,uEAAuE,EAAE,SAAS,CAAC;QAC7GA,eAAe,CAAC,QAAQ,EAAE,qBAAqB,EAAE,SAAS,CAAC;QAC3DA,eAAe,CAAC,QAAQ,EAAE,4BAA4B,EAAE,SAAS,CAAC;QAClEA,eAAe,CAAC,QAAQ,EAAE,0CAA0C,EAAE,SAAS,CAAC;MAClF;IACF;IAEAA,eAAe,CAAC,QAAQ,EAAE,2DAA2D,EAAE,SAAS,CAAC;EACnG,CAAC;EAED,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACtBtB,eAAe,CAAC,MAAM,CAAC;IACvBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMmB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCD,SAAS,CAAC,CAAC;IACX,MAAMR,mBAAmB,CAAC,CAAC;IAC3B,MAAMM,mBAAmB,CAAC,CAAC;IAC3B,MAAMC,sBAAsB,CAAC,CAAC;EAChC,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQzB,YAAY;MAClB,KAAK,UAAU;QAAE,OAAO,kBAAkB;MAC1C,KAAK,UAAU;QAAE,OAAO,cAAc;MACtC,KAAK,WAAW;QAAE,OAAO,oBAAoB;MAC7C;QAAS,OAAO,OAAO;IACzB;EACF,CAAC;EAED,oBACE9E,OAAA,CAACC,WAAW;IAACuG,EAAE,EAAC,gBAAgB;IAAAC,QAAA,gBAC9BzG,OAAA,CAACI,YAAY;MAAAqG,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC1D7G,OAAA,CAACO,eAAe;MAAAkG,QAAA,EAAC;IAEjB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,eAElB7G,OAAA,CAACc,QAAQ;MAAA2F,QAAA,gBAEPzG,OAAA,CAACiB,aAAa;QAAAwF,QAAA,gBACZzG,OAAA,CAACuB,UAAU;UAAAkF,QAAA,gBACTzG,OAAA,CAACyB,SAAS;YAAAgF,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eACvC7G,OAAA,CAACkE,eAAe;YAACC,MAAM,EAAEW,YAAa;YAAA2B,QAAA,gBACpCzG,OAAA,CAACqE,SAAS;cAAC3B,QAAQ,EAAEoC,YAAY,KAAK;YAAO;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC/CN,aAAa,CAAC,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eAEb7G,OAAA,CAAC6B,eAAe;UAAA4E,QAAA,eACdzG,OAAA,CAACgC,aAAa;YAAAyE,QAAA,gBACZzG,OAAA,CAACkC,WAAW;cACVC,QAAQ,EAAC,QAAQ;cACjB2E,OAAO,EAAE;gBACPC,KAAK,EAAEjC,YAAY,KAAK,UAAU,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;gBACpDkC,WAAW,EAAElC,YAAY,KAAK,UAAU,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,GAAG;cACjF,CAAE;cACFmC,UAAU,EAAE;gBAAEC,QAAQ,EAAE,CAAC;gBAAEC,MAAM,EAAErC,YAAY,KAAK,UAAU,GAAGsC,QAAQ,GAAG;cAAE,CAAE;cAAAX,QAAA,gBAEhFzG,OAAA;gBAAAyG,QAAA,EAAK;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjB7G,OAAA,CAACqC,SAAS;gBAAAoE,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eACjC7G,OAAA,CAACuC,MAAM;gBAAAkE,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC,eAEd7G,OAAA,CAACyC,cAAc;cACb4E,SAAS,EAAC,QAAQ;cAClB3E,QAAQ,EAAEwC,cAAe;cACzB4B,OAAO,EAAE;gBACPQ,OAAO,EAAEpC,cAAc,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG;cAC5C,CAAE;cACF+B,UAAU,EAAE;gBAAEC,QAAQ,EAAE,GAAG;gBAAEC,MAAM,EAAEjC,cAAc,GAAGkC,QAAQ,GAAG;cAAE;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtE,CAAC,eAEF7G,OAAA,CAACkC,WAAW;cACVC,QAAQ,EAAC,UAAU;cACnB2E,OAAO,EAAE;gBACPC,KAAK,EAAEjC,YAAY,KAAK,UAAU,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;gBACpDkC,WAAW,EAAElC,YAAY,KAAK,UAAU,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,GAAG;cACjF,CAAE;cACFmC,UAAU,EAAE;gBAAEC,QAAQ,EAAE,GAAG;gBAAEC,MAAM,EAAErC,YAAY,KAAK,UAAU,GAAGsC,QAAQ,GAAG;cAAE,CAAE;cAAAX,QAAA,gBAElFzG,OAAA;gBAAAyG,QAAA,EAAK;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnB7G,OAAA,CAACqC,SAAS;gBAAAoE,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAChC7G,OAAA,CAACuC,MAAM;gBAAAkE,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC,eAEd7G,OAAA,CAACyC,cAAc;cACb4E,SAAS,EAAC,QAAQ;cAClB3E,QAAQ,EAAEwC,cAAe;cACzB4B,OAAO,EAAE;gBACPQ,OAAO,EAAEpC,cAAc,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG;cAC5C,CAAE;cACF+B,UAAU,EAAE;gBAAEC,QAAQ,EAAE,GAAG;gBAAEC,MAAM,EAAEjC,cAAc,GAAGkC,QAAQ,GAAG;cAAE;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtE,CAAC,eAEF7G,OAAA,CAACkC,WAAW;cACVC,QAAQ,EAAC,QAAQ;cACjB2E,OAAO,EAAE;gBACPC,KAAK,EAAEjC,YAAY,KAAK,WAAW,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;gBACrDkC,WAAW,EAAElC,YAAY,KAAK,WAAW,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,GAAG;cAClF,CAAE;cACFmC,UAAU,EAAE;gBAAEC,QAAQ,EAAE,CAAC;gBAAEC,MAAM,EAAErC,YAAY,KAAK,WAAW,GAAGsC,QAAQ,GAAG;cAAE,CAAE;cAAAX,QAAA,gBAEjFzG,OAAA;gBAAAyG,QAAA,EAAK;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjB7G,OAAA,CAACqC,SAAS;gBAAAoE,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAClC7G,OAAA,CAACuC,MAAM;gBAAAkE,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAElB7G,OAAA,CAAC2D,YAAY;UAAA8C,QAAA,gBACXzG,OAAA,CAAC6D,aAAa;YAACE,OAAO,EAAC,SAAS;YAACwD,OAAO,EAAEjB,eAAgB;YAACkB,QAAQ,EAAE1C,YAAY,KAAK,MAAO;YAAA2B,QAAA,EAAC;UAE9F;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eAChB7G,OAAA,CAAC6D,aAAa;YAAC0D,OAAO,EAAE1B,mBAAoB;YAAC2B,QAAQ,EAAE1C,YAAY,KAAK,MAAO;YAAA2B,QAAA,EAAC;UAEhF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eAChB7G,OAAA,CAAC6D,aAAa;YAACE,OAAO,EAAC,QAAQ;YAACwD,OAAO,EAAEpB,mBAAoB;YAACqB,QAAQ,EAAE1C,YAAY,KAAK,MAAO;YAAA2B,QAAA,EAAC;UAEjG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eAChB7G,OAAA,CAAC6D,aAAa;YAACE,OAAO,EAAC,SAAS;YAACwD,OAAO,EAAEnB,sBAAuB;YAACoB,QAAQ,EAAE1C,YAAY,KAAK,MAAO;YAAA2B,QAAA,EAAC;UAErG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eAChB7G,OAAA,CAAC6D,aAAa;YAAC0D,OAAO,EAAElB,SAAU;YAAAI,QAAA,EAAC;UAEnC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGhB7G,OAAA,CAACiB,aAAa;QAAAwF,QAAA,gBACZzG,OAAA,CAACuB,UAAU;UAAAkF,QAAA,eACTzG,OAAA,CAACyB,SAAS;YAAAgF,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eAEb7G,OAAA,CAAC4C,QAAQ;UAAC6E,GAAG,EAAErC,WAAY;UAAAqB,QAAA,gBACzBzG,OAAA,CAAC8C,cAAc;YAAA2D,QAAA,gBACbzG,OAAA,CAACgD,WAAW;cAACC,KAAK,EAAC;YAAS;cAAAyD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/B7G,OAAA,CAACgD,WAAW;cAACC,KAAK,EAAC;YAAS;cAAAyD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/B7G,OAAA,CAACgD,WAAW;cAACC,KAAK,EAAC;YAAS;cAAAyD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/B7G,OAAA,CAACmD,aAAa;cAAAsD,QAAA,EAAC;YAAkC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAe,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,eAEjB7G,OAAA,CAACF,eAAe;YAAA2G,QAAA,EACbzB,cAAc,CAAC0C,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9B5H,OAAA,CAACH,MAAM,CAACkB,GAAG;cAET8G,OAAO,EAAE;gBAAEP,OAAO,EAAE,CAAC;gBAAEQ,CAAC,EAAE;cAAG,CAAE;cAC/BhB,OAAO,EAAE;gBAAEQ,OAAO,EAAE,CAAC;gBAAEQ,CAAC,EAAE;cAAE,CAAE;cAC9Bb,UAAU,EAAE;gBAAEC,QAAQ,EAAE;cAAI,CAAE;cAAAT,QAAA,EAE7BkB,IAAI,CAAClE,IAAI,KAAK,SAAS,gBACtBzD,OAAA,CAACsD,WAAW;gBAAAmD,QAAA,EAAEkB,IAAI,CAACjC;cAAO;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAc,CAAC,gBAEzC7G,OAAA,CAACwD,UAAU;gBAACC,IAAI,EAAEkE,IAAI,CAAChC,UAAW;gBAAAc,QAAA,EAAEkB,IAAI,CAACjC;cAAO;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa;YAC9D,GATIe,KAAK;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUA,CACb;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACa,CAAC,EAEjB/B,YAAY,KAAK,MAAM,iBACtB9E,OAAA,CAACH,MAAM,CAACkB,GAAG;YACT+F,OAAO,EAAE;cAAEQ,OAAO,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC;YAAE,CAAE;YAClCL,UAAU,EAAE;cAAEC,QAAQ,EAAE,CAAC;cAAEC,MAAM,EAAEC;YAAS,CAAE;YAC9CW,KAAK,EAAE;cAAE9E,KAAK,EAAE,SAAS;cAAE+E,SAAS,EAAE;YAAO,CAAE;YAAAvB,QAAA,EAChD;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAElB,CAAC;AAAChC,EAAA,CArQWD,iBAA2B;AAAAqD,IAAA,GAA3BrD,iBAA2B;AAAA,IAAAzE,EAAA,EAAAG,GAAA,EAAAO,GAAA,EAAAG,GAAA,EAAAM,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAK,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAA2D,IAAA;AAAAC,YAAA,CAAA/H,EAAA;AAAA+H,YAAA,CAAA5H,GAAA;AAAA4H,YAAA,CAAArH,GAAA;AAAAqH,YAAA,CAAAlH,GAAA;AAAAkH,YAAA,CAAA5G,GAAA;AAAA4G,YAAA,CAAA1G,GAAA;AAAA0G,YAAA,CAAAtG,GAAA;AAAAsG,YAAA,CAAAnG,GAAA;AAAAmG,YAAA,CAAAjG,GAAA;AAAAiG,YAAA,CAAA9F,GAAA;AAAA8F,YAAA,CAAA5F,GAAA;AAAA4F,YAAA,CAAA1F,IAAA;AAAA0F,YAAA,CAAAvF,IAAA;AAAAuF,YAAA,CAAArF,IAAA;AAAAqF,YAAA,CAAAnF,IAAA;AAAAmF,YAAA,CAAAhF,IAAA;AAAAgF,YAAA,CAAA7E,IAAA;AAAA6E,YAAA,CAAA3E,IAAA;AAAA2E,YAAA,CAAAxE,IAAA;AAAAwE,YAAA,CAAAtE,IAAA;AAAAsE,YAAA,CAAAjE,IAAA;AAAAiE,YAAA,CAAA9D,IAAA;AAAA8D,YAAA,CAAA5D,IAAA;AAAA4D,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}