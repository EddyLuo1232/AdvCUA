{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/eddy/AdvCUA_page/attack-demo/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React,{useEffect,useRef}from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";const DigitalFlickerContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  pointer-events: none;\\n  z-index: -1;\\n  overflow: hidden;\\n\"])));const DigitalFlickerCanvas=styled.canvas(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0.4;\\n\"])));export const DigitalRainBackground=_ref=>{let{density=0.02,flickerSpeed=0.05}=_ref;const canvasRef=useRef(null);const animationRef=useRef(null);const charactersRef=useRef([]);useEffect(()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;// Digital characters including binary, hex, and special chars\nconst binaryChars='01';const hexChars='0123456789ABCDEF';const specialChars='@#$%^&*()_+-=[]{}|;:,.<>?~`';const fontSize=16;const colors=['#4fc3f7',// Primary blue\n'#7c4dff',// Purple\n'#00bcd4',// Cyan\n'#81c784'// Light green accent\n];// Set canvas size and initialize characters\nconst resizeCanvas=()=>{canvas.width=window.innerWidth;canvas.height=window.innerHeight;initializeCharacters();};// Generate random character with weighted selection\nconst getRandomChar=()=>{const rand=Math.random();if(rand<0.6)return binaryChars[Math.floor(Math.random()*binaryChars.length)];if(rand<0.8)return hexChars[Math.floor(Math.random()*hexChars.length)];return specialChars[Math.floor(Math.random()*specialChars.length)];};// Initialize characters across the screen\nconst initializeCharacters=()=>{charactersRef.current=[];const cols=Math.floor(canvas.width/fontSize);const rows=Math.floor(canvas.height/fontSize);for(let x=0;x<cols;x++){for(let y=0;y<rows;y++){if(Math.random()<density){charactersRef.current.push({x:x*fontSize,y:y*fontSize,char:getRandomChar(),opacity:0,brightness:Math.random()*0.8+0.2,flickerSpeed:Math.random()*flickerSpeed+flickerSpeed*0.5,glitchChance:Math.random()*0.05+0.01,phase:Math.random()*Math.PI*2,maxOpacity:Math.random()*0.8+0.2,color:colors[Math.floor(Math.random()*colors.length)],lastChange:0});}}}};// Animation loop\nconst animate=currentTime=>{// Clear canvas completely for clean flicker effect\nctx.fillStyle='rgba(0, 0, 0, 1)';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.font=\"\".concat(fontSize,\"px JetBrains Mono, monospace\");charactersRef.current.forEach(char=>{// Update flicker phase\nchar.phase+=char.flickerSpeed;// Calculate flickering opacity using sine wave\nconst flicker=(Math.sin(char.phase)+1)/2;char.opacity=char.maxOpacity*flicker*char.brightness;// Random character glitching\nif(Math.random()<char.glitchChance){char.char=getRandomChar();// Sometimes change color on glitch\nif(Math.random()<0.3){char.color=colors[Math.floor(Math.random()*colors.length)];}}// Random position glitch for some characters\nlet drawX=char.x;let drawY=char.y;if(Math.random()<0.01){drawX+=(Math.random()-0.5)*4;drawY+=(Math.random()-0.5)*4;}// Only draw if visible\nif(char.opacity>0.05){// Add glow effect for bright characters\nif(char.opacity>0.6){ctx.shadowColor=char.color;ctx.shadowBlur=8;}else if(char.opacity>0.3){ctx.shadowColor=char.color;ctx.shadowBlur=4;}else{ctx.shadowBlur=0;}// Set color with opacity\nconst hex=char.color.replace('#','');const r=parseInt(hex.substr(0,2),16);const g=parseInt(hex.substr(2,2),16);const b=parseInt(hex.substr(4,2),16);ctx.fillStyle=\"rgba(\".concat(r,\", \").concat(g,\", \").concat(b,\", \").concat(char.opacity,\")\");ctx.fillText(char.char,drawX,drawY+fontSize);}// Randomly spawn new characters or remove old ones\nif(Math.random()<0.001){char.phase=0;char.maxOpacity=Math.random()*0.8+0.2;char.flickerSpeed=Math.random()*flickerSpeed+flickerSpeed*0.5;}});// Reset shadow\nctx.shadowBlur=0;// Randomly add new characters\nif(Math.random()<0.02){const cols=Math.floor(canvas.width/fontSize);const rows=Math.floor(canvas.height/fontSize);const newX=Math.floor(Math.random()*cols)*fontSize;const newY=Math.floor(Math.random()*rows)*fontSize;charactersRef.current.push({x:newX,y:newY,char:getRandomChar(),opacity:0,brightness:Math.random()*0.8+0.2,flickerSpeed:Math.random()*flickerSpeed+flickerSpeed*0.5,glitchChance:Math.random()*0.05+0.01,phase:0,maxOpacity:Math.random()*0.8+0.2,color:colors[Math.floor(Math.random()*colors.length)],lastChange:currentTime});}// Remove excess characters for performance\nif(charactersRef.current.length>1000){charactersRef.current=charactersRef.current.slice(0,800);}animationRef.current=requestAnimationFrame(animate);};resizeCanvas();window.addEventListener('resize',resizeCanvas);animationRef.current=requestAnimationFrame(animate);return()=>{window.removeEventListener('resize',resizeCanvas);if(animationRef.current){cancelAnimationFrame(animationRef.current);}};},[density,flickerSpeed]);return/*#__PURE__*/_jsx(DigitalFlickerContainer,{children:/*#__PURE__*/_jsx(DigitalFlickerCanvas,{ref:canvasRef})});};export default DigitalRainBackground;","map":{"version":3,"names":["React","useEffect","useRef","styled","jsx","_jsx","DigitalFlickerContainer","div","_templateObject","_taggedTemplateLiteral","DigitalFlickerCanvas","canvas","_templateObject2","DigitalRainBackground","_ref","density","flickerSpeed","canvasRef","animationRef","charactersRef","current","ctx","getContext","binaryChars","hexChars","specialChars","fontSize","colors","resizeCanvas","width","window","innerWidth","height","innerHeight","initializeCharacters","getRandomChar","rand","Math","random","floor","length","cols","rows","x","y","push","char","opacity","brightness","glitchChance","phase","PI","maxOpacity","color","lastChange","animate","currentTime","fillStyle","fillRect","font","concat","forEach","flicker","sin","drawX","drawY","shadowColor","shadowBlur","hex","replace","r","parseInt","substr","g","b","fillText","newX","newY","slice","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","children","ref"],"sources":["/Users/eddy/AdvCUA_page/attack-demo/src/components/DigitalRainBackground.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst DigitalFlickerContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: -1;\n  overflow: hidden;\n`;\n\nconst DigitalFlickerCanvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  opacity: 0.4;\n`;\n\ninterface DigitalCharacter {\n  x: number;\n  y: number;\n  char: string;\n  opacity: number;\n  brightness: number;\n  flickerSpeed: number;\n  glitchChance: number;\n  phase: number;\n  maxOpacity: number;\n  color: string;\n  lastChange: number;\n}\n\ninterface DigitalFlickerBackgroundProps {\n  density?: number;\n  flickerSpeed?: number;\n}\n\nexport const DigitalRainBackground: React.FC<DigitalFlickerBackgroundProps> = ({ \n  density = 0.02, \n  flickerSpeed = 0.05 \n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationRef = useRef<number | null>(null);\n  const charactersRef = useRef<DigitalCharacter[]>([]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Digital characters including binary, hex, and special chars\n    const binaryChars = '01';\n    const hexChars = '0123456789ABCDEF';\n    const specialChars = '@#$%^&*()_+-=[]{}|;:,.<>?~`';\n    \n    const fontSize = 16;\n    const colors = [\n      '#4fc3f7', // Primary blue\n      '#7c4dff', // Purple\n      '#00bcd4', // Cyan\n      '#81c784', // Light green accent\n    ];\n\n    // Set canvas size and initialize characters\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      initializeCharacters();\n    };\n\n    // Generate random character with weighted selection\n    const getRandomChar = () => {\n      const rand = Math.random();\n      if (rand < 0.6) return binaryChars[Math.floor(Math.random() * binaryChars.length)];\n      if (rand < 0.8) return hexChars[Math.floor(Math.random() * hexChars.length)];\n      return specialChars[Math.floor(Math.random() * specialChars.length)];\n    };\n\n    // Initialize characters across the screen\n    const initializeCharacters = () => {\n      charactersRef.current = [];\n      const cols = Math.floor(canvas.width / fontSize);\n      const rows = Math.floor(canvas.height / fontSize);\n\n      for (let x = 0; x < cols; x++) {\n        for (let y = 0; y < rows; y++) {\n          if (Math.random() < density) {\n            charactersRef.current.push({\n              x: x * fontSize,\n              y: y * fontSize,\n              char: getRandomChar(),\n              opacity: 0,\n              brightness: Math.random() * 0.8 + 0.2,\n              flickerSpeed: Math.random() * flickerSpeed + flickerSpeed * 0.5,\n              glitchChance: Math.random() * 0.05 + 0.01,\n              phase: Math.random() * Math.PI * 2,\n              maxOpacity: Math.random() * 0.8 + 0.2,\n              color: colors[Math.floor(Math.random() * colors.length)],\n              lastChange: 0,\n            });\n          }\n        }\n      }\n    };\n\n    // Animation loop\n    const animate = (currentTime: number) => {\n      // Clear canvas completely for clean flicker effect\n      ctx.fillStyle = 'rgba(0, 0, 0, 1)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.font = `${fontSize}px JetBrains Mono, monospace`;\n\n      charactersRef.current.forEach(char => {\n        // Update flicker phase\n        char.phase += char.flickerSpeed;\n        \n        // Calculate flickering opacity using sine wave\n        const flicker = (Math.sin(char.phase) + 1) / 2;\n        char.opacity = char.maxOpacity * flicker * char.brightness;\n\n        // Random character glitching\n        if (Math.random() < char.glitchChance) {\n          char.char = getRandomChar();\n          // Sometimes change color on glitch\n          if (Math.random() < 0.3) {\n            char.color = colors[Math.floor(Math.random() * colors.length)];\n          }\n        }\n\n        // Random position glitch for some characters\n        let drawX = char.x;\n        let drawY = char.y;\n        if (Math.random() < 0.01) {\n          drawX += (Math.random() - 0.5) * 4;\n          drawY += (Math.random() - 0.5) * 4;\n        }\n\n        // Only draw if visible\n        if (char.opacity > 0.05) {\n          // Add glow effect for bright characters\n          if (char.opacity > 0.6) {\n            ctx.shadowColor = char.color;\n            ctx.shadowBlur = 8;\n          } else if (char.opacity > 0.3) {\n            ctx.shadowColor = char.color;\n            ctx.shadowBlur = 4;\n          } else {\n            ctx.shadowBlur = 0;\n          }\n\n          // Set color with opacity\n          const hex = char.color.replace('#', '');\n          const r = parseInt(hex.substr(0, 2), 16);\n          const g = parseInt(hex.substr(2, 2), 16);\n          const b = parseInt(hex.substr(4, 2), 16);\n          \n          ctx.fillStyle = `rgba(${r}, ${g}, ${b}, ${char.opacity})`;\n          ctx.fillText(char.char, drawX, drawY + fontSize);\n        }\n\n        // Randomly spawn new characters or remove old ones\n        if (Math.random() < 0.001) {\n          char.phase = 0;\n          char.maxOpacity = Math.random() * 0.8 + 0.2;\n          char.flickerSpeed = Math.random() * flickerSpeed + flickerSpeed * 0.5;\n        }\n      });\n\n      // Reset shadow\n      ctx.shadowBlur = 0;\n\n      // Randomly add new characters\n      if (Math.random() < 0.02) {\n        const cols = Math.floor(canvas.width / fontSize);\n        const rows = Math.floor(canvas.height / fontSize);\n        const newX = Math.floor(Math.random() * cols) * fontSize;\n        const newY = Math.floor(Math.random() * rows) * fontSize;\n        \n        charactersRef.current.push({\n          x: newX,\n          y: newY,\n          char: getRandomChar(),\n          opacity: 0,\n          brightness: Math.random() * 0.8 + 0.2,\n          flickerSpeed: Math.random() * flickerSpeed + flickerSpeed * 0.5,\n          glitchChance: Math.random() * 0.05 + 0.01,\n          phase: 0,\n          maxOpacity: Math.random() * 0.8 + 0.2,\n          color: colors[Math.floor(Math.random() * colors.length)],\n          lastChange: currentTime,\n        });\n      }\n\n      // Remove excess characters for performance\n      if (charactersRef.current.length > 1000) {\n        charactersRef.current = charactersRef.current.slice(0, 800);\n      }\n\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    animationRef.current = requestAnimationFrame(animate);\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [density, flickerSpeed]);\n\n  return (\n    <DigitalFlickerContainer>\n      <DigitalFlickerCanvas ref={canvasRef} />\n    </DigitalFlickerContainer>\n  );\n};\n\nexport default DigitalRainBackground;\n"],"mappings":"8KAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,KAAM,CAAAC,uBAAuB,CAAGH,MAAM,CAACI,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,oJASzC,CAED,KAAM,CAAAC,oBAAoB,CAAGP,MAAM,CAACQ,MAAM,CAAAC,gBAAA,GAAAA,gBAAA,CAAAH,sBAAA,4DAIzC,CAqBD,MAAO,MAAM,CAAAI,qBAA8D,CAAGC,IAAA,EAGxE,IAHyE,CAC7EC,OAAO,CAAG,IAAI,CACdC,YAAY,CAAG,IACjB,CAAC,CAAAF,IAAA,CACC,KAAM,CAAAG,SAAS,CAAGf,MAAM,CAAoB,IAAI,CAAC,CACjD,KAAM,CAAAgB,YAAY,CAAGhB,MAAM,CAAgB,IAAI,CAAC,CAChD,KAAM,CAAAiB,aAAa,CAAGjB,MAAM,CAAqB,EAAE,CAAC,CAEpDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,MAAM,CAAGM,SAAS,CAACG,OAAO,CAChC,GAAI,CAACT,MAAM,CAAE,OAEb,KAAM,CAAAU,GAAG,CAAGV,MAAM,CAACW,UAAU,CAAC,IAAI,CAAC,CACnC,GAAI,CAACD,GAAG,CAAE,OAEV;AACA,KAAM,CAAAE,WAAW,CAAG,IAAI,CACxB,KAAM,CAAAC,QAAQ,CAAG,kBAAkB,CACnC,KAAM,CAAAC,YAAY,CAAG,6BAA6B,CAElD,KAAM,CAAAC,QAAQ,CAAG,EAAE,CACnB,KAAM,CAAAC,MAAM,CAAG,CACb,SAAS,CAAE;AACX,SAAS,CAAE;AACX,SAAS,CAAE;AACX,SAAW;AAAA,CACZ,CAED;AACA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzBjB,MAAM,CAACkB,KAAK,CAAGC,MAAM,CAACC,UAAU,CAChCpB,MAAM,CAACqB,MAAM,CAAGF,MAAM,CAACG,WAAW,CAClCC,oBAAoB,CAAC,CAAC,CACxB,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAC1B,GAAIF,IAAI,CAAG,GAAG,CAAE,MAAO,CAAAb,WAAW,CAACc,IAAI,CAACE,KAAK,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGf,WAAW,CAACiB,MAAM,CAAC,CAAC,CAClF,GAAIJ,IAAI,CAAG,GAAG,CAAE,MAAO,CAAAZ,QAAQ,CAACa,IAAI,CAACE,KAAK,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGd,QAAQ,CAACgB,MAAM,CAAC,CAAC,CAC5E,MAAO,CAAAf,YAAY,CAACY,IAAI,CAACE,KAAK,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGb,YAAY,CAACe,MAAM,CAAC,CAAC,CACtE,CAAC,CAED;AACA,KAAM,CAAAN,oBAAoB,CAAGA,CAAA,GAAM,CACjCf,aAAa,CAACC,OAAO,CAAG,EAAE,CAC1B,KAAM,CAAAqB,IAAI,CAAGJ,IAAI,CAACE,KAAK,CAAC5B,MAAM,CAACkB,KAAK,CAAGH,QAAQ,CAAC,CAChD,KAAM,CAAAgB,IAAI,CAAGL,IAAI,CAACE,KAAK,CAAC5B,MAAM,CAACqB,MAAM,CAAGN,QAAQ,CAAC,CAEjD,IAAK,GAAI,CAAAiB,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,IAAI,CAAEE,CAAC,EAAE,CAAE,CAC7B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,IAAI,CAAEE,CAAC,EAAE,CAAE,CAC7B,GAAIP,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGvB,OAAO,CAAE,CAC3BI,aAAa,CAACC,OAAO,CAACyB,IAAI,CAAC,CACzBF,CAAC,CAAEA,CAAC,CAAGjB,QAAQ,CACfkB,CAAC,CAAEA,CAAC,CAAGlB,QAAQ,CACfoB,IAAI,CAAEX,aAAa,CAAC,CAAC,CACrBY,OAAO,CAAE,CAAC,CACVC,UAAU,CAAEX,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAG,GAAG,CACrCtB,YAAY,CAAEqB,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGtB,YAAY,CAAGA,YAAY,CAAG,GAAG,CAC/DiC,YAAY,CAAEZ,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,IAAI,CAAG,IAAI,CACzCY,KAAK,CAAEb,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGD,IAAI,CAACc,EAAE,CAAG,CAAC,CAClCC,UAAU,CAAEf,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAG,GAAG,CACrCe,KAAK,CAAE1B,MAAM,CAACU,IAAI,CAACE,KAAK,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGX,MAAM,CAACa,MAAM,CAAC,CAAC,CACxDc,UAAU,CAAE,CACd,CAAC,CAAC,CACJ,CACF,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAAC,OAAO,CAAIC,WAAmB,EAAK,CACvC;AACAnC,GAAG,CAACoC,SAAS,CAAG,kBAAkB,CAClCpC,GAAG,CAACqC,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE/C,MAAM,CAACkB,KAAK,CAAElB,MAAM,CAACqB,MAAM,CAAC,CAE/CX,GAAG,CAACsC,IAAI,IAAAC,MAAA,CAAMlC,QAAQ,gCAA8B,CAEpDP,aAAa,CAACC,OAAO,CAACyC,OAAO,CAACf,IAAI,EAAI,CACpC;AACAA,IAAI,CAACI,KAAK,EAAIJ,IAAI,CAAC9B,YAAY,CAE/B;AACA,KAAM,CAAA8C,OAAO,CAAG,CAACzB,IAAI,CAAC0B,GAAG,CAACjB,IAAI,CAACI,KAAK,CAAC,CAAG,CAAC,EAAI,CAAC,CAC9CJ,IAAI,CAACC,OAAO,CAAGD,IAAI,CAACM,UAAU,CAAGU,OAAO,CAAGhB,IAAI,CAACE,UAAU,CAE1D;AACA,GAAIX,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGQ,IAAI,CAACG,YAAY,CAAE,CACrCH,IAAI,CAACA,IAAI,CAAGX,aAAa,CAAC,CAAC,CAC3B;AACA,GAAIE,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAE,CACvBQ,IAAI,CAACO,KAAK,CAAG1B,MAAM,CAACU,IAAI,CAACE,KAAK,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGX,MAAM,CAACa,MAAM,CAAC,CAAC,CAChE,CACF,CAEA;AACA,GAAI,CAAAwB,KAAK,CAAGlB,IAAI,CAACH,CAAC,CAClB,GAAI,CAAAsB,KAAK,CAAGnB,IAAI,CAACF,CAAC,CAClB,GAAIP,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,IAAI,CAAE,CACxB0B,KAAK,EAAI,CAAC3B,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,EAAI,CAAC,CAClC2B,KAAK,EAAI,CAAC5B,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,EAAI,CAAC,CACpC,CAEA;AACA,GAAIQ,IAAI,CAACC,OAAO,CAAG,IAAI,CAAE,CACvB;AACA,GAAID,IAAI,CAACC,OAAO,CAAG,GAAG,CAAE,CACtB1B,GAAG,CAAC6C,WAAW,CAAGpB,IAAI,CAACO,KAAK,CAC5BhC,GAAG,CAAC8C,UAAU,CAAG,CAAC,CACpB,CAAC,IAAM,IAAIrB,IAAI,CAACC,OAAO,CAAG,GAAG,CAAE,CAC7B1B,GAAG,CAAC6C,WAAW,CAAGpB,IAAI,CAACO,KAAK,CAC5BhC,GAAG,CAAC8C,UAAU,CAAG,CAAC,CACpB,CAAC,IAAM,CACL9C,GAAG,CAAC8C,UAAU,CAAG,CAAC,CACpB,CAEA;AACA,KAAM,CAAAC,GAAG,CAAGtB,IAAI,CAACO,KAAK,CAACgB,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CACvC,KAAM,CAAAC,CAAC,CAAGC,QAAQ,CAACH,GAAG,CAACI,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,EAAE,CAAC,CACxC,KAAM,CAAAC,CAAC,CAAGF,QAAQ,CAACH,GAAG,CAACI,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,EAAE,CAAC,CACxC,KAAM,CAAAE,CAAC,CAAGH,QAAQ,CAACH,GAAG,CAACI,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,EAAE,CAAC,CAExCnD,GAAG,CAACoC,SAAS,SAAAG,MAAA,CAAWU,CAAC,OAAAV,MAAA,CAAKa,CAAC,OAAAb,MAAA,CAAKc,CAAC,OAAAd,MAAA,CAAKd,IAAI,CAACC,OAAO,KAAG,CACzD1B,GAAG,CAACsD,QAAQ,CAAC7B,IAAI,CAACA,IAAI,CAAEkB,KAAK,CAAEC,KAAK,CAAGvC,QAAQ,CAAC,CAClD,CAEA;AACA,GAAIW,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,KAAK,CAAE,CACzBQ,IAAI,CAACI,KAAK,CAAG,CAAC,CACdJ,IAAI,CAACM,UAAU,CAAGf,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAG,GAAG,CAC3CQ,IAAI,CAAC9B,YAAY,CAAGqB,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGtB,YAAY,CAAGA,YAAY,CAAG,GAAG,CACvE,CACF,CAAC,CAAC,CAEF;AACAK,GAAG,CAAC8C,UAAU,CAAG,CAAC,CAElB;AACA,GAAI9B,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,IAAI,CAAE,CACxB,KAAM,CAAAG,IAAI,CAAGJ,IAAI,CAACE,KAAK,CAAC5B,MAAM,CAACkB,KAAK,CAAGH,QAAQ,CAAC,CAChD,KAAM,CAAAgB,IAAI,CAAGL,IAAI,CAACE,KAAK,CAAC5B,MAAM,CAACqB,MAAM,CAAGN,QAAQ,CAAC,CACjD,KAAM,CAAAkD,IAAI,CAAGvC,IAAI,CAACE,KAAK,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGG,IAAI,CAAC,CAAGf,QAAQ,CACxD,KAAM,CAAAmD,IAAI,CAAGxC,IAAI,CAACE,KAAK,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGI,IAAI,CAAC,CAAGhB,QAAQ,CAExDP,aAAa,CAACC,OAAO,CAACyB,IAAI,CAAC,CACzBF,CAAC,CAAEiC,IAAI,CACPhC,CAAC,CAAEiC,IAAI,CACP/B,IAAI,CAAEX,aAAa,CAAC,CAAC,CACrBY,OAAO,CAAE,CAAC,CACVC,UAAU,CAAEX,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAG,GAAG,CACrCtB,YAAY,CAAEqB,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGtB,YAAY,CAAGA,YAAY,CAAG,GAAG,CAC/DiC,YAAY,CAAEZ,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,IAAI,CAAG,IAAI,CACzCY,KAAK,CAAE,CAAC,CACRE,UAAU,CAAEf,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAG,GAAG,CACrCe,KAAK,CAAE1B,MAAM,CAACU,IAAI,CAACE,KAAK,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGX,MAAM,CAACa,MAAM,CAAC,CAAC,CACxDc,UAAU,CAAEE,WACd,CAAC,CAAC,CACJ,CAEA;AACA,GAAIrC,aAAa,CAACC,OAAO,CAACoB,MAAM,CAAG,IAAI,CAAE,CACvCrB,aAAa,CAACC,OAAO,CAAGD,aAAa,CAACC,OAAO,CAAC0D,KAAK,CAAC,CAAC,CAAE,GAAG,CAAC,CAC7D,CAEA5D,YAAY,CAACE,OAAO,CAAG2D,qBAAqB,CAACxB,OAAO,CAAC,CACvD,CAAC,CAED3B,YAAY,CAAC,CAAC,CACdE,MAAM,CAACkD,gBAAgB,CAAC,QAAQ,CAAEpD,YAAY,CAAC,CAC/CV,YAAY,CAACE,OAAO,CAAG2D,qBAAqB,CAACxB,OAAO,CAAC,CAErD,MAAO,IAAM,CACXzB,MAAM,CAACmD,mBAAmB,CAAC,QAAQ,CAAErD,YAAY,CAAC,CAClD,GAAIV,YAAY,CAACE,OAAO,CAAE,CACxB8D,oBAAoB,CAAChE,YAAY,CAACE,OAAO,CAAC,CAC5C,CACF,CAAC,CACH,CAAC,CAAE,CAACL,OAAO,CAAEC,YAAY,CAAC,CAAC,CAE3B,mBACEX,IAAA,CAACC,uBAAuB,EAAA6E,QAAA,cACtB9E,IAAA,CAACK,oBAAoB,EAAC0E,GAAG,CAAEnE,SAAU,CAAE,CAAC,CACjB,CAAC,CAE9B,CAAC,CAED,cAAe,CAAAJ,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}