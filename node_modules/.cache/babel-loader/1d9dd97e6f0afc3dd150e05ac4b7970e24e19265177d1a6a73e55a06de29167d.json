{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/eddy/AdvCUA_page/attack-demo/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React,{useEffect,useRef}from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";const DigitalRainContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  pointer-events: none;\\n  z-index: -1;\\n  overflow: hidden;\\n\"])));const DigitalRainCanvas=styled.canvas(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0.6;\\n\"])));export const DigitalRainBackground=_ref=>{let{density=0.95,speed=1}=_ref;const canvasRef=useRef(null);const animationRef=useRef(null);const columnsRef=useRef([]);useEffect(()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;// Digital characters including binary, hex, and special chars\nconst digitalChars='01ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%^&*()_+-=[]{}|;:,.<>?~`';const binaryChars='01';const hexChars='0123456789ABCDEF';const fontSize=14;let columns=0;// Set canvas size and initialize columns\nconst resizeCanvas=()=>{canvas.width=window.innerWidth;canvas.height=window.innerHeight;columns=Math.floor(canvas.width/fontSize);initializeColumns();};// Initialize column data\nconst initializeColumns=()=>{columnsRef.current=[];for(let i=0;i<columns;i++){columnsRef.current.push({characters:[],lastUpdate:0,speed:Math.random()*speed+0.5});}};// Generate random character with weighted selection\nconst getRandomChar=()=>{const rand=Math.random();if(rand<0.4)return binaryChars[Math.floor(Math.random()*binaryChars.length)];if(rand<0.7)return hexChars[Math.floor(Math.random()*hexChars.length)];return digitalChars[Math.floor(Math.random()*digitalChars.length)];};// Animation loop\nconst animate=currentTime=>{// Black background with slight transparency for trail effect\nctx.fillStyle='rgba(0, 0, 0, 0.05)';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.font=\"\".concat(fontSize,\"px JetBrains Mono, monospace\");columnsRef.current.forEach((column,columnIndex)=>{const x=columnIndex*fontSize;// Add new characters at the top\nif(Math.random()>density){const newChar={x,y:0,char:getRandomChar(),opacity:1,speed:column.speed,brightness:Math.random()*0.5+0.5,glitchChance:Math.random()*0.1};column.characters.unshift(newChar);}// Update and draw characters\ncolumn.characters=column.characters.filter((char,index)=>{// Move character down\nchar.y+=char.speed;// Fade out older characters\nif(index>0){char.opacity*=0.98;char.brightness*=0.99;}// Random character glitching\nif(Math.random()<char.glitchChance){char.char=getRandomChar();}// Calculate color based on position and brightness\nlet color;if(index===0){// Leading character - brightest blue\ncolor=\"rgba(79, 195, 247, \".concat(char.opacity,\")\");}else if(index<3){// Near leading characters - bright blue\ncolor=\"rgba(79, 195, 247, \".concat(char.opacity*char.brightness*0.8,\")\");}else if(index<8){// Middle characters - cyan blue\ncolor=\"rgba(0, 188, 212, \".concat(char.opacity*char.brightness*0.6,\")\");}else{// Trailing characters - darker blue\ncolor=\"rgba(124, 77, 255, \".concat(char.opacity*char.brightness*0.4,\")\");}// Add glow effect for leading characters\nif(index===0){ctx.shadowColor='#4fc3f7';ctx.shadowBlur=10;}else if(index<3){ctx.shadowColor='#4fc3f7';ctx.shadowBlur=5;}else{ctx.shadowBlur=0;}ctx.fillStyle=color;ctx.fillText(char.char,char.x,char.y);// Remove characters that are off screen or too faded\nreturn char.y<canvas.height+fontSize&&char.opacity>0.01;});// Limit character count per column for performance\nif(column.characters.length>50){column.characters=column.characters.slice(0,50);}});// Reset shadow\nctx.shadowBlur=0;animationRef.current=requestAnimationFrame(animate);};resizeCanvas();window.addEventListener('resize',resizeCanvas);animationRef.current=requestAnimationFrame(animate);return()=>{window.removeEventListener('resize',resizeCanvas);if(animationRef.current){cancelAnimationFrame(animationRef.current);}};},[density,speed]);return/*#__PURE__*/_jsx(DigitalRainContainer,{children:/*#__PURE__*/_jsx(DigitalRainCanvas,{ref:canvasRef})});};export default DigitalRainBackground;","map":{"version":3,"names":["React","useEffect","useRef","styled","jsx","_jsx","DigitalRainContainer","div","_templateObject","_taggedTemplateLiteral","DigitalRainCanvas","canvas","_templateObject2","DigitalRainBackground","_ref","density","speed","canvasRef","animationRef","columnsRef","current","ctx","getContext","digitalChars","binaryChars","hexChars","fontSize","columns","resizeCanvas","width","window","innerWidth","height","innerHeight","Math","floor","initializeColumns","i","push","characters","lastUpdate","random","getRandomChar","rand","length","animate","currentTime","fillStyle","fillRect","font","concat","forEach","column","columnIndex","x","newChar","y","char","opacity","brightness","glitchChance","unshift","filter","index","color","shadowColor","shadowBlur","fillText","slice","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","children","ref"],"sources":["/Users/eddy/AdvCUA_page/attack-demo/src/components/DigitalRainBackground.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst DigitalRainContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: -1;\n  overflow: hidden;\n`;\n\nconst DigitalRainCanvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  opacity: 0.6;\n`;\n\ninterface DigitalCharacter {\n  x: number;\n  y: number;\n  char: string;\n  opacity: number;\n  speed: number;\n  brightness: number;\n  glitchChance: number;\n}\n\ninterface Column {\n  characters: DigitalCharacter[];\n  lastUpdate: number;\n  speed: number;\n}\n\ninterface DigitalRainBackgroundProps {\n  density?: number;\n  speed?: number;\n}\n\nexport const DigitalRainBackground: React.FC<DigitalRainBackgroundProps> = ({ \n  density = 0.95, \n  speed = 1 \n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationRef = useRef<number | null>(null);\n  const columnsRef = useRef<Column[]>([]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Digital characters including binary, hex, and special chars\n    const digitalChars = '01ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%^&*()_+-=[]{}|;:,.<>?~`';\n    const binaryChars = '01';\n    const hexChars = '0123456789ABCDEF';\n    \n    const fontSize = 14;\n    let columns = 0;\n\n    // Set canvas size and initialize columns\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      columns = Math.floor(canvas.width / fontSize);\n      initializeColumns();\n    };\n\n    // Initialize column data\n    const initializeColumns = () => {\n      columnsRef.current = [];\n      for (let i = 0; i < columns; i++) {\n        columnsRef.current.push({\n          characters: [],\n          lastUpdate: 0,\n          speed: Math.random() * speed + 0.5,\n        });\n      }\n    };\n\n    // Generate random character with weighted selection\n    const getRandomChar = () => {\n      const rand = Math.random();\n      if (rand < 0.4) return binaryChars[Math.floor(Math.random() * binaryChars.length)];\n      if (rand < 0.7) return hexChars[Math.floor(Math.random() * hexChars.length)];\n      return digitalChars[Math.floor(Math.random() * digitalChars.length)];\n    };\n\n    // Animation loop\n    const animate = (currentTime: number) => {\n      // Black background with slight transparency for trail effect\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.font = `${fontSize}px JetBrains Mono, monospace`;\n\n      columnsRef.current.forEach((column, columnIndex) => {\n        const x = columnIndex * fontSize;\n\n        // Add new characters at the top\n        if (Math.random() > density) {\n          const newChar: DigitalCharacter = {\n            x,\n            y: 0,\n            char: getRandomChar(),\n            opacity: 1,\n            speed: column.speed,\n            brightness: Math.random() * 0.5 + 0.5,\n            glitchChance: Math.random() * 0.1,\n          };\n          column.characters.unshift(newChar);\n        }\n\n        // Update and draw characters\n        column.characters = column.characters.filter((char, index) => {\n          // Move character down\n          char.y += char.speed;\n\n          // Fade out older characters\n          if (index > 0) {\n            char.opacity *= 0.98;\n            char.brightness *= 0.99;\n          }\n\n          // Random character glitching\n          if (Math.random() < char.glitchChance) {\n            char.char = getRandomChar();\n          }\n\n          // Calculate color based on position and brightness\n          let color: string;\n          if (index === 0) {\n            // Leading character - brightest blue\n            color = `rgba(79, 195, 247, ${char.opacity})`;\n          } else if (index < 3) {\n            // Near leading characters - bright blue\n            color = `rgba(79, 195, 247, ${char.opacity * char.brightness * 0.8})`;\n          } else if (index < 8) {\n            // Middle characters - cyan blue\n            color = `rgba(0, 188, 212, ${char.opacity * char.brightness * 0.6})`;\n          } else {\n            // Trailing characters - darker blue\n            color = `rgba(124, 77, 255, ${char.opacity * char.brightness * 0.4})`;\n          }\n\n          // Add glow effect for leading characters\n          if (index === 0) {\n            ctx.shadowColor = '#4fc3f7';\n            ctx.shadowBlur = 10;\n          } else if (index < 3) {\n            ctx.shadowColor = '#4fc3f7';\n            ctx.shadowBlur = 5;\n          } else {\n            ctx.shadowBlur = 0;\n          }\n\n          ctx.fillStyle = color;\n          ctx.fillText(char.char, char.x, char.y);\n\n          // Remove characters that are off screen or too faded\n          return char.y < canvas.height + fontSize && char.opacity > 0.01;\n        });\n\n        // Limit character count per column for performance\n        if (column.characters.length > 50) {\n          column.characters = column.characters.slice(0, 50);\n        }\n      });\n\n      // Reset shadow\n      ctx.shadowBlur = 0;\n\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    animationRef.current = requestAnimationFrame(animate);\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [density, speed]);\n\n  return (\n    <DigitalRainContainer>\n      <DigitalRainCanvas ref={canvasRef} />\n    </DigitalRainContainer>\n  );\n};\n\nexport default DigitalRainBackground;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}