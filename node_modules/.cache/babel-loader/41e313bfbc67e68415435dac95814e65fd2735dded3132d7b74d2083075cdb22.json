{"ast":null,"code":"var _jsxFileName = \"/Users/eddy/AdvCUA_page/attack-demo/src/components/StarfieldBackground.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarfieldContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: -1;\n  overflow: hidden;\n`;\n_c = StarfieldContainer;\nconst StarfieldCanvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  opacity: 0.8;\n`;\n_c2 = StarfieldCanvas;\nexport const StarfieldBackground = ({\n  starCount = 200,\n  twinkleSpeed = 0.02\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef();\n  const starsRef = useRef([]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      initializeStars();\n    };\n\n    // Star colors - different shades of blue and purple\n    const starColors = ['#4fc3f7',\n    // Primary blue\n    '#7c4dff',\n    // Purple\n    '#00bcd4',\n    // Cyan\n    '#81c784',\n    // Light green\n    '#fff3e0',\n    // Warm white\n    '#e1bee7' // Light purple\n    ];\n\n    // Initialize stars\n    const initializeStars = () => {\n      starsRef.current = [];\n      for (let i = 0; i < starCount; i++) {\n        starsRef.current.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 0.5,\n          opacity: Math.random(),\n          twinkleSpeed: Math.random() * twinkleSpeed + twinkleSpeed * 0.5,\n          color: starColors[Math.floor(Math.random() * starColors.length)],\n          phase: Math.random() * Math.PI * 2\n        });\n      }\n    };\n\n    // Animation loop\n    const animate = () => {\n      // Clear canvas with slight trail effect\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.02)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Draw and update stars\n      starsRef.current.forEach(star => {\n        // Update twinkle phase\n        star.phase += star.twinkleSpeed;\n\n        // Calculate twinkling opacity\n        const twinkle = (Math.sin(star.phase) + 1) / 2;\n        const currentOpacity = star.opacity * twinkle;\n\n        // Create gradient for glow effect\n        const gradient = ctx.createRadialGradient(star.x, star.y, 0, star.x, star.y, star.size * 3);\n        gradient.addColorStop(0, `${star.color}${Math.floor(currentOpacity * 255).toString(16).padStart(2, '0')}`);\n        gradient.addColorStop(0.3, `${star.color}${Math.floor(currentOpacity * 128).toString(16).padStart(2, '0')}`);\n        gradient.addColorStop(1, 'transparent');\n\n        // Draw star with glow\n        ctx.fillStyle = gradient;\n        ctx.beginPath();\n        ctx.arc(star.x, star.y, star.size * 3, 0, Math.PI * 2);\n        ctx.fill();\n\n        // Draw bright center\n        ctx.fillStyle = `${star.color}${Math.floor(currentOpacity * 255).toString(16).padStart(2, '0')}`;\n        ctx.beginPath();\n        ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);\n        ctx.fill();\n\n        // Add sparkle effect for larger stars\n        if (star.size > 2 && currentOpacity > 0.7) {\n          const sparkleLength = star.size * 2;\n          ctx.strokeStyle = `${star.color}${Math.floor(currentOpacity * 128).toString(16).padStart(2, '0')}`;\n          ctx.lineWidth = 0.5;\n\n          // Vertical sparkle\n          ctx.beginPath();\n          ctx.moveTo(star.x, star.y - sparkleLength);\n          ctx.lineTo(star.x, star.y + sparkleLength);\n          ctx.stroke();\n\n          // Horizontal sparkle\n          ctx.beginPath();\n          ctx.moveTo(star.x - sparkleLength, star.y);\n          ctx.lineTo(star.x + sparkleLength, star.y);\n          ctx.stroke();\n        }\n      });\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    animate();\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [starCount, twinkleSpeed]);\n  return /*#__PURE__*/_jsxDEV(StarfieldContainer, {\n    children: /*#__PURE__*/_jsxDEV(StarfieldCanvas, {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(StarfieldBackground, \"Ds3asdqDkc2hAom3HFpCVJkmMJg=\");\n_c3 = StarfieldBackground;\nexport default StarfieldBackground;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StarfieldContainer\");\n$RefreshReg$(_c2, \"StarfieldCanvas\");\n$RefreshReg$(_c3, \"StarfieldBackground\");","map":{"version":3,"names":["React","useEffect","useRef","styled","jsxDEV","_jsxDEV","StarfieldContainer","div","_c","StarfieldCanvas","canvas","_c2","StarfieldBackground","starCount","twinkleSpeed","_s","canvasRef","animationRef","starsRef","current","ctx","getContext","resizeCanvas","width","window","innerWidth","height","innerHeight","initializeStars","starColors","i","push","x","Math","random","y","size","opacity","color","floor","length","phase","PI","animate","fillStyle","fillRect","forEach","star","twinkle","sin","currentOpacity","gradient","createRadialGradient","addColorStop","toString","padStart","beginPath","arc","fill","sparkleLength","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/eddy/AdvCUA_page/attack-demo/src/components/StarfieldBackground.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst StarfieldContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: -1;\n  overflow: hidden;\n`;\n\nconst StarfieldCanvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  opacity: 0.8;\n`;\n\ninterface Star {\n  x: number;\n  y: number;\n  size: number;\n  opacity: number;\n  twinkleSpeed: number;\n  color: string;\n  phase: number;\n}\n\ninterface StarfieldBackgroundProps {\n  starCount?: number;\n  twinkleSpeed?: number;\n}\n\nexport const StarfieldBackground: React.FC<StarfieldBackgroundProps> = ({ \n  starCount = 200, \n  twinkleSpeed = 0.02 \n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationRef = useRef<number>();\n  const starsRef = useRef<Star[]>([]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      initializeStars();\n    };\n\n    // Star colors - different shades of blue and purple\n    const starColors = [\n      '#4fc3f7', // Primary blue\n      '#7c4dff', // Purple\n      '#00bcd4', // Cyan\n      '#81c784', // Light green\n      '#fff3e0', // Warm white\n      '#e1bee7', // Light purple\n    ];\n\n    // Initialize stars\n    const initializeStars = () => {\n      starsRef.current = [];\n      for (let i = 0; i < starCount; i++) {\n        starsRef.current.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 0.5,\n          opacity: Math.random(),\n          twinkleSpeed: (Math.random() * twinkleSpeed + twinkleSpeed * 0.5),\n          color: starColors[Math.floor(Math.random() * starColors.length)],\n          phase: Math.random() * Math.PI * 2,\n        });\n      }\n    };\n\n    // Animation loop\n    const animate = () => {\n      // Clear canvas with slight trail effect\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.02)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Draw and update stars\n      starsRef.current.forEach(star => {\n        // Update twinkle phase\n        star.phase += star.twinkleSpeed;\n        \n        // Calculate twinkling opacity\n        const twinkle = (Math.sin(star.phase) + 1) / 2;\n        const currentOpacity = star.opacity * twinkle;\n\n        // Create gradient for glow effect\n        const gradient = ctx.createRadialGradient(\n          star.x, star.y, 0,\n          star.x, star.y, star.size * 3\n        );\n        gradient.addColorStop(0, `${star.color}${Math.floor(currentOpacity * 255).toString(16).padStart(2, '0')}`);\n        gradient.addColorStop(0.3, `${star.color}${Math.floor(currentOpacity * 128).toString(16).padStart(2, '0')}`);\n        gradient.addColorStop(1, 'transparent');\n\n        // Draw star with glow\n        ctx.fillStyle = gradient;\n        ctx.beginPath();\n        ctx.arc(star.x, star.y, star.size * 3, 0, Math.PI * 2);\n        ctx.fill();\n\n        // Draw bright center\n        ctx.fillStyle = `${star.color}${Math.floor(currentOpacity * 255).toString(16).padStart(2, '0')}`;\n        ctx.beginPath();\n        ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);\n        ctx.fill();\n\n        // Add sparkle effect for larger stars\n        if (star.size > 2 && currentOpacity > 0.7) {\n          const sparkleLength = star.size * 2;\n          ctx.strokeStyle = `${star.color}${Math.floor(currentOpacity * 128).toString(16).padStart(2, '0')}`;\n          ctx.lineWidth = 0.5;\n          \n          // Vertical sparkle\n          ctx.beginPath();\n          ctx.moveTo(star.x, star.y - sparkleLength);\n          ctx.lineTo(star.x, star.y + sparkleLength);\n          ctx.stroke();\n          \n          // Horizontal sparkle\n          ctx.beginPath();\n          ctx.moveTo(star.x - sparkleLength, star.y);\n          ctx.lineTo(star.x + sparkleLength, star.y);\n          ctx.stroke();\n        }\n      });\n\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [starCount, twinkleSpeed]);\n\n  return (\n    <StarfieldContainer>\n      <StarfieldCanvas ref={canvasRef} />\n    </StarfieldContainer>\n  );\n};\n\nexport default StarfieldBackground;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}